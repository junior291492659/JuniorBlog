[{"D:\\git_workspace\\junior-blog\\src\\index.tsx":"1","D:\\git_workspace\\junior-blog\\src\\reportWebVitals.ts":"2","D:\\git_workspace\\junior-blog\\src\\App.tsx":"3","D:\\git_workspace\\junior-blog\\src\\components\\Hello\\index.tsx":"4","D:\\git_workspace\\junior-blog\\src\\components\\AnotherHello\\index.tsx":"5","D:\\git_workspace\\junior-blog\\src\\components\\Header\\index.tsx":"6","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\index.tsx":"7","D:\\git_workspace\\junior-blog\\src\\components\\Loader\\index.tsx":"8","D:\\git_workspace\\junior-blog\\src\\components\\Container\\index.tsx":"9","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-article-introduction.tsx":"10","D:\\git_workspace\\junior-blog\\src\\components\\LeeCard\\index.tsx":"11","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-detail.tsx":"12","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\mockData.tsx":"13","D:\\git_workspace\\junior-blog\\src\\components\\CodeBlock\\index.tsx":"14","D:\\git_workspace\\junior-blog\\src\\components\\ArticleMenu\\index.tsx":"15","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Login\\index.tsx":"16","D:\\git_workspace\\junior-blog\\src\\api\\service.ts":"17","D:\\git_workspace\\junior-blog\\src\\api\\index.ts":"18","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\index.tsx":"19","D:\\git_workspace\\junior-blog\\src\\utils\\useLocalStorage.ts":"20","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\AddArticle\\index.tsx":"21","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\IndexPage\\index.tsx":"22","D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\index.tsx":"23","D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\test.tsx":"24","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\ImageUpload\\index.tsx":"25","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\ArticleList\\index.tsx":"26","D:\\git_workspace\\junior-blog\\src\\const\\index.ts":"27","D:\\git_workspace\\junior-blog\\src\\components\\Tocify\\index.tsx":"28","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\DraftList\\index.tsx":"29","D:\\git_workspace\\junior-blog\\src\\components\\imperative-dialog\\index.tsx":"30","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\index.tsx":"31","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\cssMixin.tsx":"32","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar.tsx":"33","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\close.tsx":"34","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\hooks.tsx":"35","D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\click.tsx":"36","D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\index.tsx":"37","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\button.tsx":"38","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\divider.tsx":"39","D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\styles.tsx":"40","D:\\git_workspace\\junior-blog\\src\\pages\\Interact\\index.tsx":"41","D:\\git_workspace\\junior-blog\\src\\components\\Reply\\index.tsx":"42","D:\\git_workspace\\junior-blog\\src\\components\\QQCard\\index.tsx":"43","D:\\git_workspace\\junior-blog\\src\\components\\WechatCard\\index.tsx":"44","D:\\git_workspace\\junior-blog\\src\\pages\\Images\\index.tsx":"45","D:\\git_workspace\\junior-blog\\src\\pages\\Pictures\\index.js":"46","D:\\git_workspace\\junior-blog\\src\\components\\Images\\index.tsx":"47","D:\\git_workspace\\junior-blog\\src\\components\\ArticleTag\\index.tsx":"48"},{"size":449,"mtime":1608014455962,"results":"49","hashOfConfig":"50"},{"size":425,"mtime":499162500000,"results":"51","hashOfConfig":"50"},{"size":1620,"mtime":1610325920718,"results":"52","hashOfConfig":"50"},{"size":1028,"mtime":1607674880842,"results":"53","hashOfConfig":"50"},{"size":324,"mtime":1607675095000,"results":"54","hashOfConfig":"50"},{"size":4541,"mtime":1608706871087,"results":"55","hashOfConfig":"50"},{"size":2510,"mtime":1608709739084,"results":"56","hashOfConfig":"50"},{"size":561,"mtime":1608084953157,"results":"57","hashOfConfig":"50"},{"size":1192,"mtime":1608706634200,"results":"58","hashOfConfig":"50"},{"size":4240,"mtime":1608707301582,"results":"59","hashOfConfig":"50"},{"size":2517,"mtime":1608626958079,"results":"60","hashOfConfig":"50"},{"size":8118,"mtime":1608707388150,"results":"61","hashOfConfig":"50"},{"size":900,"mtime":1608016552596,"results":"62","hashOfConfig":"50"},{"size":271,"mtime":1607996760877,"results":"63","hashOfConfig":"50"},{"size":1734,"mtime":1608273581374,"results":"64","hashOfConfig":"50"},{"size":3424,"mtime":1608707165600,"results":"65","hashOfConfig":"50"},{"size":4995,"mtime":1610329966277,"results":"66","hashOfConfig":"50"},{"size":1381,"mtime":1608624870283,"results":"67","hashOfConfig":"50"},{"size":4905,"mtime":1608707270021,"results":"68","hashOfConfig":"50"},{"size":2925,"mtime":1608086129643,"results":"69","hashOfConfig":"50"},{"size":15526,"mtime":1608707248804,"results":"70","hashOfConfig":"50"},{"size":822,"mtime":1608100736826,"results":"71","hashOfConfig":"50"},{"size":3409,"mtime":1608706645498,"results":"72","hashOfConfig":"50"},{"size":8270,"mtime":1608706664302,"results":"73","hashOfConfig":"50"},{"size":4554,"mtime":1610330777136,"results":"74","hashOfConfig":"50"},{"size":5040,"mtime":1608281078780,"results":"75","hashOfConfig":"50"},{"size":239,"mtime":1608683971454,"results":"76","hashOfConfig":"50"},{"size":2020,"mtime":1608273329834,"results":"77","hashOfConfig":"50"},{"size":5065,"mtime":1608707076736,"results":"78","hashOfConfig":"50"},{"size":1883,"mtime":1608467645498,"results":"79","hashOfConfig":"50"},{"size":7687,"mtime":1594974360917,"results":"80","hashOfConfig":"50"},{"size":411,"mtime":1594541334979,"results":"81","hashOfConfig":"50"},{"size":3156,"mtime":1608707038328,"results":"82","hashOfConfig":"50"},{"size":957,"mtime":1594541334979,"results":"83","hashOfConfig":"50"},{"size":10397,"mtime":1608466526829,"results":"84","hashOfConfig":"50"},{"size":336,"mtime":1594541334979,"results":"85","hashOfConfig":"50"},{"size":853,"mtime":1594541334979,"results":"86","hashOfConfig":"50"},{"size":1123,"mtime":1608466392901,"results":"87","hashOfConfig":"50"},{"size":627,"mtime":1594541334979,"results":"88","hashOfConfig":"50"},{"size":1289,"mtime":1594541334979,"results":"89","hashOfConfig":"50"},{"size":18036,"mtime":1608707471487,"results":"90","hashOfConfig":"50"},{"size":694,"mtime":1608604911846,"results":"91","hashOfConfig":"50"},{"size":526,"mtime":1608628378414,"results":"92","hashOfConfig":"50"},{"size":558,"mtime":1608628752243,"results":"93","hashOfConfig":"50"},{"size":8197,"mtime":1610333621239,"results":"94","hashOfConfig":"50"},{"size":7892,"mtime":1608637015703,"results":"95","hashOfConfig":"50"},{"size":9256,"mtime":1610331946124,"results":"96","hashOfConfig":"50"},{"size":1831,"mtime":1608705928534,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1pbi381",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"100"},"D:\\git_workspace\\junior-blog\\src\\index.tsx",[],["203","204"],"D:\\git_workspace\\junior-blog\\src\\reportWebVitals.ts",[],"D:\\git_workspace\\junior-blog\\src\\App.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Hello\\index.tsx",[],["205","206"],"D:\\git_workspace\\junior-blog\\src\\components\\AnotherHello\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Header\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Loader\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Container\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-article-introduction.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\LeeCard\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-detail.tsx",["207","208"],"import React, { useEffect, useState } from \"react\";\r\nimport Container from \"../../components/Container\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Header from \"../../components/Header\";\r\nimport LeeCard from \"../../components/LeeCard\";\r\n\r\nimport { PageHeader, Divider, message, Affix } from \"antd\";\r\nimport {\r\n  FieldTimeOutlined,\r\n  FireFilled,\r\n  LikeFilled,\r\n  BorderlessTableOutlined,\r\n} from \"@ant-design/icons\";\r\nimport marked from \"marked\";\r\nimport hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/monokai-sublime.css\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\n// import moment from \"moment\";\r\nimport style from \"./blog.detail.module.less\";\r\nimport \"../../publicCSS/style.css\";\r\nimport heart from \"../../image/heart.png\";\r\n// import { blogData1 } from \"./mockData\";\r\nimport {\r\n  getBlogArticleById,\r\n  BlogArticleListI,\r\n  addView,\r\n  addAssit,\r\n} from \"../../api/service\";\r\nimport { ArticleType, ArticleSourceType } from \"../../const\";\r\nimport Tocify from \"../../components/Tocify\";\r\n\r\nmessage.config({\r\n  top: 100,\r\n  duration: 2,\r\n  maxCount: 2,\r\n});\r\n\r\ninterface BlogaricleI {\r\n  id: number;\r\n  type: string; // 文章来源类型\r\n  title: string;\r\n  introduction: string;\r\n  tagName: string; // 文章类型\r\n  time: string;\r\n  fire: number;\r\n  remark: number;\r\n  markdown: string;\r\n}\r\n\r\nfunction BlogDetail(props: RouteComponentProps) {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [data, setData] = useState<BlogaricleI | null>(null);\r\n  const [isAsisted, setIsAsisted] = useState<boolean>(false);\r\n\r\n  // markdown 代码高亮设置\r\n  const renderer = new marked.Renderer();\r\n  marked.setOptions({\r\n    renderer: renderer,\r\n    gfm: true, //启动类似Github样式的Markdown,填写true或者false\r\n    pedantic: false, //只解析符合Markdown定义的，不修正Markdown的错误。填写true或者false\r\n    sanitize: false, //原始输出，忽略HTML标签，这个作为一个开发人员，一定要写flase\r\n    //tables: true, //支持Github形式的表格，必须打开gfm选项\r\n    breaks: true, //支持Github换行符，必须打开gfm选项，填写true或者false\r\n    smartLists: true, //优化列表输出，这个填写ture之后，你的样式会好看很多，所以建议设置成ture\r\n    smartypants: true,\r\n    highlight: function (code) {\r\n      return hljs.highlightAuto(code).value;\r\n    },\r\n  });\r\n\r\n  // 右侧文章导航栏设置\r\n  const tocify = new Tocify();\r\n  renderer.heading = function (text, level, raw) {\r\n    const anchor = tocify.add(text, level);\r\n    return `<a id=\"${anchor}\" href=\"#${anchor}\" class=\"anchor-fix\"><h${level}>${text}</h${level}></a>\\n`;\r\n  };\r\n  let html = marked(data?.markdown || \"\");\r\n\r\n  const handleAsist = (ev: React.MouseEvent) => {\r\n    if (isAsisted) {\r\n      message.info(\"你已经在本次浏览中点过赞了，感谢。\");\r\n    } else {\r\n      const remark = (data?.remark as number) + 1;\r\n      message.success(\"点赞成功，感谢你的赞！\");\r\n      setData({ ...(data as BlogaricleI), remark });\r\n      setIsAsisted(true);\r\n    }\r\n  };\r\n\r\n  // 获取文章内容\r\n  useEffect(() => {\r\n    const pathname = props.location.pathname;\r\n    // console.log(/^\\/article\\d+$/.test(pathname));\r\n    if (/\\d+$/.test(pathname)) {\r\n      const id = pathname.split(\"/\").reverse()[0].slice(7);\r\n      // console.log(\"id\", id);\r\n      getBlogArticleById(parseInt(id))\r\n        .then((res) => {\r\n          console.log(\"by id\", res);\r\n          if (res.data) {\r\n            const filterData = res.data as BlogArticleListI;\r\n            setData({\r\n              id: filterData.id,\r\n              type: ArticleSourceType[filterData.assit_count],\r\n              title: filterData.article_title,\r\n              introduction: filterData.introducemd,\r\n              tagName: ArticleType[filterData.article_type],\r\n              time: filterData.publish_date,\r\n              fire: filterData.view_count + 1,\r\n              remark: filterData.assit_count,\r\n              markdown: filterData.article_content,\r\n            });\r\n          } else {\r\n            // 文章不存在 TODO直接跳转至首页\r\n            setTimeout(() => {\r\n              message.warning(\"opps,找不到该文章\");\r\n              props.history.replace(\"/\");\r\n            }, 1000);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          message.error(\"不好意思，服务器出错了\");\r\n          console.log(error);\r\n          // setLoading(false);\r\n        });\r\n    } else {\r\n      //  url不对，获取不到文章 id，直接跳转至首页\r\n      console.log(\"error\");\r\n      message.warning(\"opps,找不到该文章\");\r\n      // 必须得异步，不然会有严重警告，因为每日一句里面得ajax请求的回调函数\r\n      setTimeout(() => {\r\n        props.history.replace(\"/\");\r\n      }, 1000);\r\n    }\r\n  }, [props.location.pathname]);\r\n\r\n  // 添加浏览次数\r\n  useEffect(() => {\r\n    if (data) {\r\n      addView({ id: data.id, view_count: data.fire }).catch((error) => {\r\n        message.error(\"不好意思，服务器出错了\");\r\n        console.log(error);\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  // 添加点赞数\r\n  useEffect(() => {\r\n    if (isAsisted) {\r\n      console.log(\"assit effect\");\r\n      addAssit({\r\n        id: data?.id as number,\r\n        assit_count: data?.remark as number,\r\n      }).catch((error) => {\r\n        message.error(\"不好意思，服务器出错了\");\r\n        console.log(error);\r\n      });\r\n    }\r\n  }, [isAsisted]);\r\n  return (\r\n    <Loader loading={loading}>\r\n      <Header />\r\n      <Container>\r\n        {/* {中间主栏目} */}\r\n        <div className={`${style[\"md-wrap\"]} animated rollIn`}>\r\n          <PageHeader\r\n            title=\"返回首页\"\r\n            className={style[\"md-back\"]}\r\n            onBack={() => {\r\n              console.log(\"back\");\r\n              props.history.push(\"/\");\r\n            }}\r\n          />\r\n          <div className={style[\"md-header\"]}>\r\n            <div className={style[\"md-title\"]}>\r\n              <strong>{`【${data?.type}】`}</strong>\r\n              {data?.title}\r\n            </div>\r\n            <div className={style[\"md-icon-list\"]}>\r\n              <span className={style[\"md-icon\"]}>\r\n                <FieldTimeOutlined />\r\n                {/* {moment(data?.time && new Date(data.time)).format(\r\n                  \"YYYY年MM月DD日 HH:mm\"\r\n                )} */}\r\n                {data?.time}\r\n              </span>\r\n              <span className={style[\"md-icon\"]}>\r\n                <BorderlessTableOutlined /> {data?.tagName}\r\n              </span>\r\n              <span className={style[\"md-icon\"]}>\r\n                <FireFilled /> {data?.fire}\r\n              </span>\r\n              <span className={style[\"md-icon\"]}>\r\n                <LikeFilled /> {data?.remark}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className={`${style[\"md-context\"]} markdown`}>\r\n            <div dangerouslySetInnerHTML={{ __html: html }}></div>\r\n            <Divider dashed className={style[\"ending\"]}>\r\n              Ending\r\n            </Divider>\r\n            {/* <div className={style[\"ending\"]}>-- Endding --</div> */}\r\n            <div\r\n              className={`${style[\"assist\"]} ${\r\n                isAsisted ? style[\"heart\"] : \"\"\r\n              }`}\r\n            >\r\n              <img src={heart} alt=\"\" />\r\n              <img src={heart} alt=\"\" />\r\n              <div onClick={handleAsist}>赞</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* {右侧栏} */}\r\n        <>\r\n          <LeeCard />\r\n          {/* <ArticleMenu source={(\"\\n\" + data?.markdown) as string} /> */}\r\n          <Affix offsetTop={70}>\r\n            <div className={style[\"detailed-nav\"]}>\r\n              <div className={style[\"nav-title\"]}>文章目录</div>\r\n              <div className={style[\"nav-list\"]}>\r\n                {tocify && tocify.render()}\r\n              </div>\r\n            </div>\r\n          </Affix>\r\n        </>\r\n      </Container>\r\n    </Loader>\r\n  );\r\n}\r\n\r\nexport default withRouter(BlogDetail);\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\mockData.tsx",[],["209","210"],"D:\\git_workspace\\junior-blog\\src\\components\\CodeBlock\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\ArticleMenu\\index.tsx",["211"],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Login\\index.tsx",["212","213"],"import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport style from \"./index.module.less\";\r\nimport { login, checkLogin, ILogin } from \"../../../api/service\";\r\nimport { useLocalStorage } from \"../../../utils/useLocalStorage\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n// import { withRouter } from \"react-router-dom\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 4, span: 20 },\r\n};\r\n\r\ninterface LoginData extends ILogin {\r\n  remember: boolean;\r\n}\r\n\r\nfunction Login(props: RouteComponentProps) {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [token, setToken, removeToken] = useLocalStorage(\"token\", null, {\r\n    raw: true,\r\n  });\r\n\r\n  const onFinish = (values: LoginData) => {\r\n    console.log(\"Success:\", values);\r\n    login({ username: values.username, password: values.password })\r\n      .then((res) => {\r\n        console.log(\"res in login\", res);\r\n        if (res.code === 200) {\r\n          message.success(\"登录成功\");\r\n          //是否记住token\r\n          setToken(res.token);\r\n\r\n          // window.location.replace(\"/admin\");\r\n          props.history.replace(\"/admin\");\r\n        } else {\r\n          message.error(res.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  // 验证是否已经登录，若已经登录则直接跳转至后台界面\r\n  useEffect(() => {\r\n    checkLogin().then((res) => {\r\n      if (res.code === 200) {\r\n        console.log(\"在登录界面。检测到已经登录\");\r\n        window.location.replace(\"/admin\");\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Loader loading={loading}>\r\n      <div className={style[\"form-container\"]}>\r\n        <Helmet>\r\n          <title>登录 | Junior_Lee的个人博客管理</title>\r\n        </Helmet>\r\n        <div className={style[\"title\"]}>Junior Lee博客后台管理登录</div>\r\n        <Form\r\n          {...layout}\r\n          form={form}\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"用户名\"\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please input your username!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"密码\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your password!\" }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              className={style[\"reset\"]}\r\n              htmlType=\"button\"\r\n              onClick={onReset}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Loader>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\git_workspace\\junior-blog\\src\\api\\service.ts",[],"D:\\git_workspace\\junior-blog\\src\\api\\index.ts",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\utils\\useLocalStorage.ts",["214"],"import { useState, useCallback, Dispatch, SetStateAction } from \"react\";\r\n\r\nconst isClient = typeof window === \"object\";\r\n\r\ntype parserOptions<T> =\r\n  | {\r\n      raw: true;\r\n    }\r\n  | {\r\n      raw: false;\r\n      serializer: (value: T) => string;\r\n      deserializer: (value: string) => T;\r\n    };\r\n\r\nconst noop = () => {};\r\n\r\nexport const useLocalStorage = <T>(\r\n  key: string,\r\n  initialValue?: T,\r\n  options?: parserOptions<T>\r\n): [T | undefined, Dispatch<SetStateAction<T | undefined>>, () => void] => {\r\n  if (!isClient) {\r\n    return [initialValue as T, noop, noop];\r\n  }\r\n  if (!key) {\r\n    throw new Error(\"useLocalStorage key may not be falsy\");\r\n  }\r\n\r\n  const deserializer = options\r\n    ? options.raw\r\n      ? (value: any) => value\r\n      : options.deserializer\r\n    : JSON.parse;\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [state, setState] = useState<T | undefined>(() => {\r\n    try {\r\n      const serializer = options\r\n        ? options.raw\r\n          ? String\r\n          : options.serializer\r\n        : JSON.stringify;\r\n\r\n      const localStorageValue = localStorage.getItem(key);\r\n      if (localStorageValue !== null) {\r\n        return deserializer(localStorageValue);\r\n      } else {\r\n        initialValue && localStorage.setItem(key, serializer(initialValue));\r\n        return initialValue;\r\n      }\r\n    } catch {\r\n      // If user is in private mode or has storage restriction\r\n      // localStorage can throw. JSON.parse and JSON.stringify\r\n      // can throw, too.\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const set: Dispatch<SetStateAction<T | undefined>> = useCallback(\r\n    (valOrFunc) => {\r\n      try {\r\n        const newState =\r\n          typeof valOrFunc === \"function\"\r\n            ? (valOrFunc as Function)(state)\r\n            : valOrFunc;\r\n        if (typeof newState === \"undefined\") return;\r\n        let value: string;\r\n\r\n        if (options)\r\n          if (options.raw)\r\n            if (typeof newState === \"string\") value = newState;\r\n            else value = JSON.stringify(newState);\r\n          else if (options.serializer) value = options.serializer(newState);\r\n          else value = JSON.stringify(newState);\r\n        else value = JSON.stringify(newState);\r\n\r\n        localStorage.setItem(key, value);\r\n        setState(deserializer(value));\r\n      } catch {\r\n        // If user is in private mode or has storage restriction\r\n        // localStorage can throw. Also JSON.stringify can throw.\r\n      }\r\n    },\r\n    [key, setState]\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const remove = useCallback(() => {\r\n    try {\r\n      localStorage.removeItem(key);\r\n      setState(undefined);\r\n    } catch {\r\n      // If user is in private mode or has storage restriction\r\n      // localStorage can throw.\r\n    }\r\n  }, [key, setState]);\r\n\r\n  return [state, set, remove];\r\n};\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\AddArticle\\index.tsx",["215"],"import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport marked from \"marked\";\r\nimport hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/monokai-sublime.css\";\r\nimport style from \"./index.module.less\";\r\nimport \"../../../../publicCSS/style.css\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  DatePicker,\r\n  message,\r\n  Modal,\r\n} from \"antd\";\r\nimport {\r\n  addBlogArticle,\r\n  AddBlogArticleI,\r\n  BlogArticleListI,\r\n  getBlogArticleById,\r\n  updateBlogArticleById,\r\n  updateBlogArticleByIdI,\r\n} from \"../../../../api/service\";\r\nimport Loader from \"../../../../components/Loader\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport imageselect from \"../../../../image/imageselect.png\";\r\nimport ImageUpload from \"../../../Admin/ImageUpload\";\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst renderer = new marked.Renderer();\r\nmarked.setOptions({\r\n  renderer: renderer,\r\n  gfm: true, //启动类似Github样式的Markdown,填写true或者false\r\n  pedantic: false, //只解析符合Markdown定义的，不修正Markdown的错误。填写true或者false\r\n  sanitize: false, //原始输出，忽略HTML标签，这个作为一个开发人员，一定要写flase\r\n  //tables: true, //支持Github形式的表格，必须打开gfm选项\r\n  breaks: true, //支持Github换行符，必须打开gfm选项，填写true或者false\r\n  smartLists: true, //优化列表输出，这个填写ture之后，你的样式会好看很多，所以建议设置成ture\r\n  smartypants: true,\r\n  highlight: function (code) {\r\n    return hljs.highlightAuto(code).value;\r\n  },\r\n});\r\n\r\nexport interface ArticleI {\r\n  articleId: number; // 0; // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n  // oldarticleTitle: \"\"; //以前的标题(保存后在数据库依照此标题修改)\r\n  articleTitle: string; // \"\"; //文章标题\r\n  articleContent: string; // \"\"; //markdown的编辑内容\r\n  markdownContent: string; // \"预览内容\"; //html内容\r\n  introducemd: string; // \"\"; //简介的markdown内容\r\n  introducehtml: string; // \"等待编辑\"; //简介的html内容\r\n  publishDate: string; // \"\"; //发布日期\r\n  updateDate: string; // \"\"; //修改日志的日期(未使用)\r\n  // typeInfo: []; // 文章类别信息(未使用)\r\n  selectedType: number | string; //选择的文章类别\r\n  sourceType: number | string; // \"\"; //文章来源  原创 || 转载\r\n  introduceImage: string; // 列表页简介图片\r\n\r\n  //   disabled: false; //修改文章后按钮不可点击\r\n  //   titledisabled: false; //标题改变控制按钮不可点击\r\n}\r\n\r\ninterface RouterInfo {\r\n  id: string;\r\n}\r\n\r\nexport default function AddArticle(props: RouteComponentProps<RouterInfo>) {\r\n  const initial: ArticleI = {\r\n    articleId: 0, // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n    articleTitle: \"\", //文章标题\r\n    articleContent: \"\", //markdown的编辑内容\r\n    markdownContent: \"预览内容\", //html内容\r\n    introducemd: \"\", //简介的markdown内容\r\n    introducehtml: \"等待编辑\", //简介的html内容\r\n    publishDate: \"\", //发布日期\r\n    updateDate: \"\", //修改日志的日期(未使用)\r\n    // typeInfo: [], // 文章类别信息(未使用)\r\n    selectedType: -1, //选择的文章类别\r\n    sourceType: -1, //文章来源\r\n    introduceImage: \"\",\r\n  };\r\n  const [article, setArticle] = useState<ArticleI>(initial);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n\r\n  const changeContent = (value: string) => {\r\n    const html = marked(value);\r\n    setArticle({ ...article, articleContent: value, markdownContent: html });\r\n  };\r\n\r\n  const changeIntroduce = (value: string) => {\r\n    const html = marked(value);\r\n    setArticle({ ...article, introducemd: value, introducehtml: html });\r\n  };\r\n\r\n  const publishArticle = () => {\r\n    if (condition()) {\r\n      message.success(\"存储校验通过\");\r\n      if (!article.articleId) {\r\n        message.success(\"新的存储\");\r\n        const article_title = article.articleTitle;\r\n        const article_content = article.articleContent;\r\n        const markdown_content = article.markdownContent;\r\n        const introducemd = article.introducemd;\r\n        const introducehtml = article.introducehtml;\r\n        const publish_date = article.publishDate;\r\n        const update_date = \"\";\r\n        const article_type = article.selectedType as number;\r\n        const article_source_type = article.sourceType as number;\r\n        const introduce_image = article.introduceImage;\r\n\r\n        const data: AddBlogArticleI = {\r\n          article_title,\r\n          article_content,\r\n          markdown_content,\r\n          introducemd,\r\n          introducehtml,\r\n          publish_date,\r\n          update_date,\r\n          article_type,\r\n          article_source_type,\r\n          introduce_image,\r\n        };\r\n\r\n        setLoading(true);\r\n        addBlogArticle(data)\r\n          .then((res) => {\r\n            setLoading(false);\r\n            if (res.code === 200) {\r\n              message.success(res.message);\r\n              props.history.push(\"/admin/articleList\");\r\n            } else {\r\n              message.error(res.message);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false);\r\n            message.error(\"不好意思，服务器出错了\");\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        message.success(\"修改之前已存储的\");\r\n        const id = article.articleId;\r\n        const article_title = article.articleTitle;\r\n        const article_content = article.articleContent;\r\n        const markdown_content = article.markdownContent;\r\n        const introducemd = article.introducemd;\r\n        const introducehtml = article.introducehtml;\r\n        const publish_date = article.publishDate;\r\n        const update_date = \"\";\r\n        const article_type = article.selectedType as number;\r\n        const article_source_type = article.sourceType as number;\r\n        const introduce_image = article.introduceImage;\r\n\r\n        const data: updateBlogArticleByIdI = {\r\n          id,\r\n          article_title,\r\n          article_content,\r\n          markdown_content,\r\n          introducemd,\r\n          introducehtml,\r\n          publish_date,\r\n          update_date,\r\n          article_type,\r\n          article_source_type,\r\n          introduce_image,\r\n        };\r\n        updateBlogArticleById(data)\r\n          .then((res) => {\r\n            setLoading(false);\r\n            if (res.code === 200) {\r\n              message.success(res.message);\r\n              props.history.push(\"/admin/articleList\");\r\n            } else {\r\n              message.error(res.message);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false);\r\n            message.error(\"不好意思，服务器出错了\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveArticle = () => {\r\n    if (condition()) {\r\n      message.success(\"存储校验通过\");\r\n      if (!article.articleId) {\r\n        message.success(\"新的存储\");\r\n      } else {\r\n      }\r\n    }\r\n  };\r\n\r\n  const condition = () => {\r\n    if (!article.articleTitle) {\r\n      message.warning(\"文章标题不能为空\");\r\n      return false;\r\n    } else if (article.selectedType === -1) {\r\n      message.warning(\"必须选择文章类型\");\r\n      return false;\r\n    } else if (article.sourceType === -1) {\r\n      message.warning(\"文章来源不能为空\");\r\n      return false;\r\n    } else if (!article.articleContent) {\r\n      message.warning(\"文章内容不能为空\");\r\n      return false;\r\n    } else if (!article.introducemd) {\r\n      message.warning(\"文章简介不能为空\");\r\n      return false;\r\n    } else if (!article.publishDate) {\r\n      message.warning(\"发布日期不能为空\");\r\n      return false;\r\n    } else if (!article.introduceImage) {\r\n      message.warning(\"简介图片不能为空\");\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // 如果是查看页面，根据url的id初始化data\r\n  useEffect(() => {\r\n    console.log(\"id\", props.match.params.id);\r\n    const id = props.match.params.id;\r\n    if (id) {\r\n      getBlogArticleById(parseInt(id))\r\n        .then((res) => {\r\n          console.log(\"by id\", res);\r\n          if (res.data) {\r\n            const filterData = res.data as BlogArticleListI;\r\n            setArticle({\r\n              articleId: filterData.id,\r\n              articleTitle: filterData.article_title, //文章标题\r\n              articleContent: filterData.article_content, //markdown的编辑内容\r\n              markdownContent: filterData.markdown_content, //html内容\r\n              introducemd: filterData.introducemd, //简介的markdown内容\r\n              introducehtml: filterData.introducehtml, //简介的html内容\r\n              publishDate: filterData.publish_date, //发布日期\r\n              updateDate: filterData.update_date, //修改日志的日期(未使用)\r\n              // typeInfo: [], // 文章类别信息(未使用)\r\n              selectedType: filterData.article_type, //选择的文章类别\r\n              sourceType: filterData.article_source_type, //文章来源\r\n              introduceImage: filterData.introduce_image,\r\n            });\r\n          } else {\r\n            // 文章不存在 TODO直接跳转至首页\r\n            setTimeout(() => {\r\n              message.warning(\"opps,找不到该文章\");\r\n              props.history.replace(\"/admin/articleList\");\r\n            }, 1000);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          message.error(\"不好意思，服务器出错了\");\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [props.match.params]);\r\n\r\n  // 监听保存快捷键的 effect\r\n  useEffect(() => {\r\n    const handleSave = (e: KeyboardEvent) => {\r\n      if (\r\n        e.key === \"s\" &&\r\n        (navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey)\r\n      ) {\r\n        e.preventDefault();\r\n        alert(\"modified, saved\");\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleSave);\r\n\r\n    return () => document.removeEventListener(\"keydown\", handleSave);\r\n  }, []);\r\n  return (\r\n    <Loader loading={loading}>\r\n      <Row gutter={10}>\r\n        {/* 主体内容左侧部分 */}\r\n        <Col span={18}>\r\n          <Row gutter={10}>\r\n            <Col span={16}>\r\n              <Input\r\n                placeholder=\"博客标题\"\r\n                value={article.articleTitle}\r\n                onChange={(e) => {\r\n                  setArticle({ ...article, articleTitle: e.target.value });\r\n                }}\r\n                size=\"large\"\r\n              />\r\n            </Col>\r\n\r\n            <Col span={4} style={{ paddingLeft: \"21px\" }}>\r\n              <Select\r\n                className={style[\"select\"]}\r\n                value={\r\n                  article.selectedType === -1\r\n                    ? \"请选择文章类型\"\r\n                    : article.selectedType\r\n                }\r\n                size=\"large\"\r\n                onChange={(value) =>\r\n                  setArticle({ ...article, selectedType: value })\r\n                }\r\n              >\r\n                <Option value={0}>博客分享</Option>\r\n                <Option value={1}>Leetcode训练</Option>\r\n              </Select>\r\n            </Col>\r\n\r\n            <Col span={4}>\r\n              <Select\r\n                className={style[\"select\"]}\r\n                value={\r\n                  article.sourceType === -1\r\n                    ? \"请选择文章来源\"\r\n                    : article.selectedType\r\n                }\r\n                size=\"large\"\r\n                onChange={(value) =>\r\n                  setArticle({ ...article, sourceType: value })\r\n                }\r\n              >\r\n                <Option value={0}>博主原创</Option>\r\n                <Option value={1}>美文转载</Option>\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row gutter={10}>\r\n            <Col span={12}>\r\n              <TextArea\r\n                value={article.articleContent}\r\n                className={style[\"markdown-content\"]}\r\n                rows={60}\r\n                placeholder=\"文章内容\"\r\n                onChange={(e) => changeContent(e.target.value)}\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <div\r\n                className={`${style[\"show-html\"]} markdown`}\r\n                dangerouslySetInnerHTML={{ __html: article.markdownContent }}\r\n              ></div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {/* 主体内容右侧部分 */}\r\n        <Col span={6}>\r\n          <Row>\r\n            {/* <Col span={24}> */}\r\n            <Col span={8}>\r\n              <Button size=\"large\" onClick={saveArticle}>\r\n                暂存文章\r\n              </Button>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button type=\"primary\" size=\"large\" onClick={publishArticle}>\r\n                {article.articleId > 0 ? \"确认修改\" : \"发布文章\"}\r\n              </Button>\r\n            </Col>\r\n            {/* </Col> */}\r\n            <Col span={24}>\r\n              <br />\r\n              <TextArea\r\n                className={style[\"introduce-content\"]}\r\n                rows={8}\r\n                placeholder=\"文章简介\"\r\n                value={article.introducemd}\r\n                onChange={(e) => {\r\n                  changeIntroduce(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              {/* <br /> */}\r\n              {/* <div\r\n                className={`${style[\"introduce-html\"]} markdown`}\r\n                dangerouslySetInnerHTML={{ __html: article.introducehtml }}\r\n              ></div> */}\r\n            </Col>\r\n            <Col span={12}>\r\n              <div className={style[\"date-select\"]}>\r\n                <DatePicker\r\n                  value={\r\n                    !article.publishDate ? null : moment(article.publishDate)\r\n                  }\r\n                  placeholder=\"发布日期\"\r\n                  size=\"large\"\r\n                  onChange={(date, dateString) =>\r\n                    setArticle({ ...article, publishDate: dateString })\r\n                  }\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col span={12} style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n              <div className={style[\"introduce-image-select\"]}>\r\n                <Input\r\n                  placeholder=\"博客简介图片\"\r\n                  value={article.introduceImage}\r\n                  size=\"large\"\r\n                  onChange={(e) => {\r\n                    setArticle({ ...article, introduceImage: e.target.value });\r\n                  }}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col span={12} style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n              <div\r\n                className={style[\"image-select\"]}\r\n                onClick={() => setVisible(true)}\r\n              >\r\n                <img src={imageselect} alt=\"\" />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        visible={visible}\r\n        maskClosable={false}\r\n        width={1366}\r\n        onCancel={() => setVisible(false)}\r\n        onOk={() => setVisible(false)}\r\n      >\r\n        <ImageUpload />\r\n      </Modal>\r\n    </Loader>\r\n  );\r\n}\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\IndexPage\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\test.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\ImageUpload\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\ArticleList\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\const\\index.ts",[],"D:\\git_workspace\\junior-blog\\src\\components\\Tocify\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\DraftList\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\imperative-dialog\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\cssMixin.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\close.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\hooks.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\click.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\button.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\divider.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\styles.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Interact\\index.tsx",["216","217"],"import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Input, Form, Button, Switch, message, Divider } from \"antd\";\r\nimport { MailOutlined } from \"@ant-design/icons\";\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport Loader from \"../../components/Loader\";\r\nimport LeeCard from \"../../components/LeeCard\";\r\nimport QQCard from \"../../components/QQCard\";\r\nimport WechatCard from \"../../components/WechatCard\";\r\nimport Reply from \"../../components/Reply\";\r\nimport style from \"./index.module.less\";\r\nimport defaultHeadImg from \"../../image/defaultImg.jpg\";\r\nimport genji from \"../../image/genji.png\";\r\nimport moment from \"moment\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport {\r\n  addInteract,\r\n  AddInteractI,\r\n  getInteract,\r\n  addInteractReply,\r\n  AddInteractReplyI,\r\n  checkLogin,\r\n} from \"../../api/service\";\r\n\r\ninterface ReplyI {\r\n  isReply: boolean;\r\n  replyItem: ReplyItem | null;\r\n}\r\n\r\ninterface ReplyItem {\r\n  id: number;\r\n  name: string;\r\n  context: string;\r\n  email: string;\r\n  is_master: number;\r\n}\r\n\r\ninterface InteractDataI {\r\n  id: number;\r\n  name: string;\r\n  context: string;\r\n  can_reply: number;\r\n  is_master: number;\r\n  email: string;\r\n  create_time: number;\r\n  children: InteractDataChildrenI[];\r\n}\r\n\r\ninterface InteractDataChildrenI {\r\n  id: number;\r\n  name: string;\r\n  context: string;\r\n  email: string;\r\n  is_master: number;\r\n  can_reply: number;\r\n  create_time: number;\r\n  fid: number;\r\n  fname: string;\r\n  femail: string;\r\n  fis_master: number;\r\n}\r\n\r\nfunction Interact() {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [reply, setReply] = useState<ReplyI | null>({\r\n    isReply: false,\r\n    replyItem: {\r\n      id: 0,\r\n      is_master: 1,\r\n      context: \"hello\",\r\n      name: \"\",\r\n      email: \"\",\r\n    },\r\n  });\r\n  // 添加完邮箱后显示QQ头像\r\n  const [headImg, setHeadImg] = useState<string>(\"\");\r\n  const [singleReply, setSingleReply] = useState<boolean>(false);\r\n  const [interactData, setInteractData] = useState<InteractDataI[]>([]);\r\n  const [counter, setCounter] = useState<number>(0); // 用于提交之后重渲染\r\n  const [form] = Form.useForm();\r\n\r\n  //   console.log(\"interactData.length\", interactData.length, interactData);\r\n\r\n  const addRow = () => {\r\n    // console.log(\"finish\");\r\n    setLoading(true);\r\n\r\n    // 验证邮箱格式\r\n    const emailValue = form.getFieldValue(\"email\").trim();\r\n    if (!/^[\\w-]+@qq\\.com$/i.test(emailValue)) {\r\n      message.error(\"QQ邮箱格式不正确\");\r\n      setTimeout(() => setLoading(false), 2000);\r\n      return;\r\n    }\r\n\r\n    const name = form.getFieldValue(\"name\");\r\n    const context = form.getFieldValue(\"context\");\r\n    const create_time = new Date().getTime() / 1000;\r\n    // console.log(name, context, create_time);\r\n\r\n    if (!reply?.isReply) {\r\n      // 添加留言\r\n      setLoading(true);\r\n      const data: AddInteractI = {\r\n        name,\r\n        context,\r\n        can_reply: !singleReply ? 1 : 0,\r\n        is_master: 0,\r\n        email: emailValue,\r\n        create_time,\r\n      };\r\n      addInteract(data)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          setCounter((counter) => counter + 1);\r\n          message.success(res.message);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          message.error(\"不好意思，服务器出错了\");\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      // 添加回复\r\n      setLoading(true);\r\n      const data: AddInteractReplyI = {\r\n        name,\r\n        context,\r\n        can_reply: !singleReply ? 1 : 0,\r\n        is_master: 0,\r\n        email: emailValue,\r\n        create_time,\r\n        fid: reply.replyItem?.id as number,\r\n        fname: reply.replyItem?.name as string,\r\n        femail: reply.replyItem?.email as string,\r\n        fis_master: reply.replyItem?.is_master as number,\r\n      };\r\n\r\n      addInteractReply(data)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          setCounter((counter) => counter + 1);\r\n          message.success(res.message);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          message.error(\"不好意思，服务器出错了\");\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleMail = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = ev.target.value.trim();\r\n    if (value === \"\" || !/^[\\w-]+@qq\\.com$/i.test(value)) {\r\n      setHeadImg(\"\");\r\n      return;\r\n    } else setHeadImg(`http://q4.qlogo.cn/g?b=qq&nk=${value}&s=3`);\r\n  };\r\n\r\n  const handleReply = (fitem: InteractDataI, citem?: InteractDataChildrenI) => {\r\n    const data = { ...fitem };\r\n    if (citem) {\r\n      // 说明是对回复的回复，将属性进行覆盖\r\n      data.name = citem.name;\r\n      data.context = citem.context;\r\n      data.email = citem.email;\r\n      data.is_master = citem.is_master;\r\n    }\r\n    setReply({ replyItem: data, isReply: true });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setReply({ replyItem: null, isReply: false });\r\n  };\r\n\r\n  const masterReply = (fitem: InteractDataI, citem?: InteractDataChildrenI) => {\r\n    checkLogin()\r\n      .then((res) => {\r\n        if (res.code === 200) {\r\n          const data = { ...fitem };\r\n          if (citem) {\r\n            // 说明是对回复的回复，将属性进行覆盖\r\n            data.name = citem.name;\r\n            data.context = citem.context;\r\n            data.email = citem.email;\r\n            data.is_master = citem.is_master;\r\n          }\r\n          setReply({ replyItem: data, isReply: true });\r\n        } else {\r\n          message.info(\"不好意思，这位朋友设置了仅博主回复\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error in checkLogin in Interact.masterReply()\", error);\r\n      });\r\n  };\r\n\r\n  // 获取留言\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getInteract()\r\n      .then((res) => {\r\n        console.log(\"getInteract\", res);\r\n        setInteractData(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"不好意思，服务器出错了\");\r\n        console.log(error);\r\n        setLoading(false);\r\n      });\r\n  }, [counter]);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Container>\r\n        <div className={style[\"interact-wrap\"]}>\r\n          <div className={style[\"interact-title\"]}>\r\n            <div className={style[\"interact-title-header\"]}>\r\n              Junior_Lee 的留言板\r\n            </div>\r\n            <div className={style[\"interact-title-context-wrap\"]}>\r\n              <div className={style[\"interact-title-context\"]}>\r\n                <div className={style[\"context-line\"]}>\r\n                  If I should meet thee\r\n                </div>\r\n                <div className={style[\"context-line\"]}>After long years,</div>\r\n                <div className={style[\"context-line\"]}>\r\n                  How should I greet thee?\r\n                </div>\r\n                <div className={style[\"context-line\"]}>\r\n                  With silence and tears.\r\n                </div>\r\n                <br />\r\n                <div className={style[\"context-line\"]}>若我在见到你，</div>\r\n                <div className={style[\"context-line\"]}>事搁经年，</div>\r\n                <div className={style[\"context-line\"]}>我该如何贺你？</div>\r\n                <div className={style[\"context-line\"]}>以沉默，以眼泪。</div>\r\n                <div className={style[\"context-author\"]}>——拜伦</div>\r\n              </div>\r\n              <img src={genji} alt=\"\" className={style[\"poster\"]} />\r\n            </div>\r\n          </div>\r\n          <div id=\"reply-holder\"></div>\r\n          <div className={style[\"interact-edit-wrap\"]}>\r\n            <div className={style[\"interact-edit-header\"]}>留个言吧~</div>\r\n            {reply?.isReply ? (\r\n              <div className={style[\"interact-reply\"]}>\r\n                <div className={style[\"reply-item\"]}>\r\n                  回复{\" \"}\r\n                  {reply?.replyItem?.is_master ? (\r\n                    <span className={style[\"master\"]}>博主</span>\r\n                  ) : (\r\n                    reply?.replyItem?.name\r\n                  )}{\" \"}\r\n                  的一条留言：\r\n                </div>\r\n                <div className={style[\"reply-item\"]}>\r\n                  {reply?.replyItem?.context}\r\n                </div>\r\n                <div className={style[\"reply-item\"]}>\r\n                  <a onClick={handleCancel}>取消回复</a>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n\r\n            <Form\r\n              layout=\"horizontal\"\r\n              requiredMark={false}\r\n              form={form}\r\n              onFinish={addRow}\r\n            >\r\n              <Row justify=\"space-between\" style={{ marginBottom: \"5px\" }}>\r\n                <Col xs={20} sm={20} md={20} lg={20} xl={21}>\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: \"留个ID好分辨？\" }]}\r\n                  >\r\n                    <Input\r\n                      className={style[\"interact-inputarea\"]}\r\n                      placeholder=\"留个ID日后好相认？\"\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={4} sm={3} md={4} lg={4} xl={3}>\r\n                  {\" \"}\r\n                  {headImg == \"\" ? (\r\n                    <img\r\n                      src={defaultHeadImg}\r\n                      className={style[\"interact-headImg\"]}\r\n                      alt=\"\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={headImg}\r\n                      className={style[\"interact-headImg\"]}\r\n                      alt=\"\"\r\n                    />\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n              <Form.Item\r\n                name=\"context\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"这也不能留个寂寞啊，来个战网ID好友位也行啊\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.TextArea\r\n                  rows={6}\r\n                  className={style[\"interact-inputarea\"]}\r\n                  placeholder=\"旁友，来个战网ID好友位也行啊\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Row\r\n                className={style[\"interact-edit-subline\"]}\r\n                justify=\"space-between\"\r\n              >\r\n                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                  <Row>\r\n                    <Col xs={2} sm={2} md={2} lg={2} xl={2}>\r\n                      <MailOutlined className={style[\"email\"]} />\r\n                    </Col>\r\n                    <Col xs={20} sm={20} md={20} lg={20} xl={20}>\r\n                      <Form.Item\r\n                        name=\"email\"\r\n                        rules={[\r\n                          { required: true, message: \"旁友，你的邮箱还没留呐\" },\r\n                        ]}\r\n                      >\r\n                        <Input\r\n                          className={style[\"email-input\"]}\r\n                          placeholder=\"你的QQ邮箱~\"\r\n                          onChange={handleMail}\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                  <Row justify=\"end\">\r\n                    <Col style={{ marginRight: \"15px\" }}>\r\n                      <span className={style[\"canreply\"]}>\r\n                        是否仅博主回复：\r\n                      </span>\r\n                      <Form.Item name=\"canreply\" noStyle={true}>\r\n                        <Switch\r\n                          checked={singleReply}\r\n                          checkedChildren=\"开\"\r\n                          unCheckedChildren=\"关\"\r\n                          onChange={(checked: boolean) =>\r\n                            setSingleReply(checked)\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        className={style[\"interact-submit\"]}\r\n                        htmlType=\"submit\"\r\n                        //   onClick={() => .submit()}\r\n                      >\r\n                        留言\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n          <div className={style[\"interact-list\"]}>\r\n            <div className={`${style[\"interact-list-header\"]}`}>留言列表</div>\r\n            {interactData.length > 0 ? (\r\n              <Loader loading={loading}>\r\n                {interactData.map((fitem: InteractDataI, index: number) => (\r\n                  <LazyLoad\r\n                    height={300}\r\n                    classNamePrefix=\"animated fadeInRight\"\r\n                    key={index}\r\n                  >\r\n                    <div className={style[\"interact-list-context\"]}>\r\n                      <Reply\r\n                        name={fitem.name}\r\n                        author={\r\n                          fitem.is_master ? (\r\n                            <span className={style[\"master\"]}>博主</span>\r\n                          ) : (\r\n                            fitem.name\r\n                          )\r\n                        }\r\n                        context={fitem.context}\r\n                        headImg={`http://q4.qlogo.cn/g?b=qq&nk=${fitem.email}&s=3`}\r\n                        reply={\r\n                          <span>\r\n                            {moment(new Date(fitem.create_time * 1000)).format(\r\n                              \"YYYY年MM月DD日 HH:mm:ss\"\r\n                            )}\r\n                            {fitem.can_reply ? (\r\n                              <a\r\n                                href=\"#reply-holder\"\r\n                                style={{ marginLeft: \"10px\" }}\r\n                                onClick={() => handleReply(fitem)}\r\n                              >\r\n                                回复\r\n                              </a>\r\n                            ) : (\r\n                              <span\r\n                                style={{ marginLeft: \"10px\" }}\r\n                                onClick={() => masterReply(fitem)}\r\n                              >\r\n                                这位朋友设置了仅博主回复\r\n                              </span>\r\n                            )}{\" \"}\r\n                          </span>\r\n                        }\r\n                      >\r\n                        {fitem.children.map(\r\n                          (citem: InteractDataChildrenI, index: number) => (\r\n                            <Reply\r\n                              key={index}\r\n                              name={citem.name}\r\n                              author={\r\n                                <span>\r\n                                  {citem.is_master ? (\r\n                                    <span className={style[\"master\"]}>\r\n                                      博主\r\n                                    </span>\r\n                                  ) : (\r\n                                    citem.name\r\n                                  )}{\" \"}\r\n                                  回复{\" \"}\r\n                                  {citem.fis_master ? (\r\n                                    <span className={style[\"master\"]}>\r\n                                      博主\r\n                                    </span>\r\n                                  ) : (\r\n                                    citem.fname\r\n                                  )}{\" \"}\r\n                                  ：\r\n                                </span>\r\n                              }\r\n                              context={citem.context}\r\n                              headImg={`http://q4.qlogo.cn/g?b=qq&nk=${citem.email}&s=3`}\r\n                              reply={\r\n                                <span>\r\n                                  {moment(\r\n                                    new Date(citem.create_time * 1000)\r\n                                  ).format(\"YYYY年MM月DD日 HH:mm:ss\")}\r\n                                  {citem.can_reply ? (\r\n                                    <a\r\n                                      href=\"#reply-a\"\r\n                                      style={{ marginLeft: \"10px\" }}\r\n                                      onClick={() => handleReply(fitem, citem)}\r\n                                    >\r\n                                      回复\r\n                                    </a>\r\n                                  ) : (\r\n                                    <span\r\n                                      style={{ marginLeft: \"10px\" }}\r\n                                      onClick={() => masterReply(fitem, citem)}\r\n                                    >\r\n                                      这位朋友设置了仅博主回复\r\n                                    </span>\r\n                                  )}{\" \"}\r\n                                </span>\r\n                              }\r\n                            ></Reply>\r\n                          )\r\n                        )}\r\n                      </Reply>\r\n                    </div>\r\n                  </LazyLoad>\r\n                ))}\r\n              </Loader>\r\n            ) : (\r\n              <div className={style[\"no-reply\"]}>暂时还没有留言噢~</div>\r\n            )}\r\n          </div>\r\n          <Divider dashed className={style[\"ending\"]}>\r\n            已经到底了\r\n          </Divider>\r\n        </div>\r\n\r\n        <>\r\n          <LeeCard />\r\n          <WechatCard />\r\n          <QQCard />\r\n        </>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Interact;\r\n","D:\\git_workspace\\junior-blog\\src\\components\\Reply\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\QQCard\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\WechatCard\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Images\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Pictures\\index.js",["218","219","220","221"],"D:\\git_workspace\\junior-blog\\src\\components\\Images\\index.tsx",["222"],"D:\\git_workspace\\junior-blog\\src\\components\\ArticleTag\\index.tsx",["223"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getArticleTags } from \"../../api/service\";\r\nimport style from \"./index.module.less\";\r\n\r\ninterface TagI {\r\n  id: number;\r\n  type: number;\r\n  type_name: string;\r\n}\r\nfunction ArticleTag() {\r\n  const [tags, setTags] = useState<TagI[]>([]);\r\n  const [currentIndex, setCurrentIndex] = useState<number>(-1);\r\n\r\n  // 获取文章标签\r\n  useEffect(() => {\r\n    getArticleTags().then((res) => {\r\n      //   console.log(\"res in article tags\", res);\r\n      setTags(res.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const path = window.location.pathname.split(\"/\");\r\n    let index = \"-1\";\r\n    if (path[1] === \"blog\") {\r\n      index = path[2].replace(/[^0-9]/gi, \"\");\r\n    }\r\n    // console.log(\"index\", index);\r\n    setCurrentIndex(parseInt(index));\r\n  });\r\n  return (\r\n    <div className={`${style[\"tag-wrap\"]} animated fadeInRight`}>\r\n      <div className={style[\"tag-header\"]}>文章分类</div>\r\n      <ul className={style[\"tag-context\"]}>\r\n        <Link to=\"/\">\r\n          <li\r\n            className={`${style[\"tag\"]} ${\r\n              currentIndex === -1 ? style[\"current\"] : \"\"\r\n            }`}\r\n          >\r\n            全部文章\r\n          </li>\r\n        </Link>\r\n        {tags.map((item) => (\r\n          <Link\r\n            to={{\r\n              pathname: \"/blog/tag\" + item.type,\r\n              state: { type: item.type },\r\n            }}\r\n            key={item.id}\r\n          >\r\n            <li\r\n              className={`${style[\"tag\"]} ${\r\n                currentIndex === item.type ? style[\"current\"] : \"\"\r\n              }`}\r\n            >\r\n              {item.type_name}\r\n            </li>\r\n          </Link>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ArticleTag);\r\n",{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"224","replacedBy":"228"},{"ruleId":"226","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":136,"column":6,"nodeType":"232","endLine":136,"endColumn":31,"suggestions":"233"},{"ruleId":"230","severity":1,"message":"234","line":160,"column":6,"nodeType":"232","endLine":160,"endColumn":17,"suggestions":"235"},{"ruleId":"224","replacedBy":"236"},{"ruleId":"226","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":33,"column":11,"nodeType":"240","messageId":"241","endLine":33,"endColumn":17},{"ruleId":"238","severity":1,"message":"242","line":26,"column":10,"nodeType":"240","messageId":"241","endLine":26,"endColumn":15},{"ruleId":"238","severity":1,"message":"243","line":26,"column":27,"nodeType":"240","messageId":"241","endLine":26,"endColumn":38},{"ruleId":"230","severity":1,"message":"244","line":85,"column":5,"nodeType":"232","endLine":85,"endColumn":20,"suggestions":"245"},{"ruleId":"230","severity":1,"message":"231","line":265,"column":6,"nodeType":"232","endLine":265,"endColumn":26,"suggestions":"246"},{"ruleId":"247","severity":1,"message":"248","line":264,"column":19,"nodeType":"249","endLine":264,"endColumn":45},{"ruleId":"250","severity":1,"message":"251","line":289,"column":28,"nodeType":"252","messageId":"253","endLine":289,"endColumn":30},{"ruleId":"254","severity":1,"message":"255","line":5,"column":10,"nodeType":"240","messageId":"241","endLine":5,"endColumn":29},{"ruleId":"254","severity":1,"message":"256","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":19},{"ruleId":"250","severity":1,"message":"251","line":191,"column":16,"nodeType":"252","messageId":"253","endLine":191,"endColumn":18},{"ruleId":"257","severity":1,"message":"258","line":228,"column":25,"nodeType":"249","endLine":237,"endColumn":27},{"ruleId":"230","severity":1,"message":"259","line":199,"column":6,"nodeType":"232","endLine":199,"endColumn":8,"suggestions":"260"},{"ruleId":"230","severity":1,"message":"261","line":23,"column":3,"nodeType":"240","endLine":23,"endColumn":12,"suggestions":"262"},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],["263"],["264"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["265"],"React Hook useEffect has missing dependencies: 'data?.id' and 'data?.remark'. Either include them or remove the dependency array.",["266"],["263"],["264"],"@typescript-eslint/no-unused-vars","'source' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'removeToken' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'deserializer', 'options', and 'state'. Either include them or remove the dependency array.",["267"],["268"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useImperativeDialog' is defined but never used.","'ImageViewer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'imageData.length'. Either include it or remove the dependency array.",["269"],"React Hook useEffect contains a call to 'setCurrentIndex'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["270"],"no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [props.history, props.location.pathname]",{"range":"283","text":"284"},"Update the dependencies array to be: [data?.id, data?.remark, isAsisted]",{"range":"285","text":"286"},"Update the dependencies array to be: [deserializer, key, options, state]",{"range":"287","text":"288"},"Update the dependencies array to be: [props.history, props.match.params]",{"range":"289","text":"290"},"Update the dependencies array to be: [imageData.length]",{"range":"291","text":"292"},"Add dependencies array: []",{"range":"293","text":"294"},[4378,4403],"[props.history, props.location.pathname]",[4945,4956],"[data?.id, data?.remark, isAsisted]",[2546,2561],"[deserializer, key, options, state]",[8721,8741],"[props.history, props.match.params]",[6308,6310],"[imageData.length]",[857,857],", []"]