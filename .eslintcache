[{"D:\\git_workspace\\junior-blog\\src\\index.tsx":"1","D:\\git_workspace\\junior-blog\\src\\reportWebVitals.ts":"2","D:\\git_workspace\\junior-blog\\src\\App.tsx":"3","D:\\git_workspace\\junior-blog\\src\\components\\Hello\\index.tsx":"4","D:\\git_workspace\\junior-blog\\src\\components\\AnotherHello\\index.tsx":"5","D:\\git_workspace\\junior-blog\\src\\components\\Header\\index.tsx":"6","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\index.tsx":"7","D:\\git_workspace\\junior-blog\\src\\components\\Loader\\index.tsx":"8","D:\\git_workspace\\junior-blog\\src\\components\\Container\\index.tsx":"9","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-article-introduction.tsx":"10","D:\\git_workspace\\junior-blog\\src\\components\\LeeCard\\index.tsx":"11","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-detail.tsx":"12","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\mockData.tsx":"13","D:\\git_workspace\\junior-blog\\src\\components\\CodeBlock\\index.tsx":"14","D:\\git_workspace\\junior-blog\\src\\components\\ArticleMenu\\index.tsx":"15","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Login\\index.tsx":"16","D:\\git_workspace\\junior-blog\\src\\api\\service.ts":"17","D:\\git_workspace\\junior-blog\\src\\api\\index.ts":"18","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\index.tsx":"19","D:\\git_workspace\\junior-blog\\src\\utils\\useLocalStorage.ts":"20","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\AddArticle\\index.tsx":"21","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\IndexPage\\index.tsx":"22","D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\index.tsx":"23","D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\test.tsx":"24","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\ImageUpload\\index.tsx":"25","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\ArticleList\\index.tsx":"26","D:\\git_workspace\\junior-blog\\src\\const\\index.ts":"27","D:\\git_workspace\\junior-blog\\src\\components\\Tocify\\index.tsx":"28","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\DraftList\\index.tsx":"29","D:\\git_workspace\\junior-blog\\src\\components\\imperative-dialog\\index.tsx":"30","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\index.tsx":"31","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\cssMixin.tsx":"32","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar.tsx":"33","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\close.tsx":"34","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\hooks.tsx":"35","D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\click.tsx":"36","D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\index.tsx":"37","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\button.tsx":"38","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\divider.tsx":"39","D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\styles.tsx":"40","D:\\git_workspace\\junior-blog\\src\\pages\\Interact\\index.tsx":"41","D:\\git_workspace\\junior-blog\\src\\components\\Reply\\index.tsx":"42","D:\\git_workspace\\junior-blog\\src\\components\\QQCard\\index.tsx":"43","D:\\git_workspace\\junior-blog\\src\\components\\WechatCard\\index.tsx":"44","D:\\git_workspace\\junior-blog\\src\\pages\\Images\\index.tsx":"45","D:\\git_workspace\\junior-blog\\src\\pages\\Pictures\\index.js":"46","D:\\git_workspace\\junior-blog\\src\\components\\Images\\index.tsx":"47","D:\\git_workspace\\junior-blog\\src\\components\\ArticleTag\\index.tsx":"48","D:\\git_workspace\\junior-blog\\src\\pages\\About\\index.tsx":"49"},{"size":449,"mtime":1608014455962,"results":"50","hashOfConfig":"51"},{"size":425,"mtime":499162500000,"results":"52","hashOfConfig":"51"},{"size":1723,"mtime":1610334794969,"results":"53","hashOfConfig":"51"},{"size":1028,"mtime":1607674880842,"results":"54","hashOfConfig":"51"},{"size":324,"mtime":1607675095000,"results":"55","hashOfConfig":"51"},{"size":4536,"mtime":1610334814295,"results":"56","hashOfConfig":"51"},{"size":2525,"mtime":1610347372605,"results":"57","hashOfConfig":"51"},{"size":561,"mtime":1608084953157,"results":"58","hashOfConfig":"51"},{"size":1314,"mtime":1610347492311,"results":"59","hashOfConfig":"51"},{"size":4240,"mtime":1608707301582,"results":"60","hashOfConfig":"51"},{"size":2517,"mtime":1608626958079,"results":"61","hashOfConfig":"51"},{"size":8133,"mtime":1610347456202,"results":"62","hashOfConfig":"51"},{"size":900,"mtime":1608016552596,"results":"63","hashOfConfig":"51"},{"size":271,"mtime":1607996760877,"results":"64","hashOfConfig":"51"},{"size":1734,"mtime":1608273581374,"results":"65","hashOfConfig":"51"},{"size":3453,"mtime":1610346733291,"results":"66","hashOfConfig":"51"},{"size":4995,"mtime":1610329966277,"results":"67","hashOfConfig":"51"},{"size":1381,"mtime":1608624870283,"results":"68","hashOfConfig":"51"},{"size":4905,"mtime":1608707270021,"results":"69","hashOfConfig":"51"},{"size":2925,"mtime":1608086129643,"results":"70","hashOfConfig":"51"},{"size":15526,"mtime":1608707248804,"results":"71","hashOfConfig":"51"},{"size":822,"mtime":1608100736826,"results":"72","hashOfConfig":"51"},{"size":3409,"mtime":1608706645498,"results":"73","hashOfConfig":"51"},{"size":8270,"mtime":1608706664302,"results":"74","hashOfConfig":"51"},{"size":4554,"mtime":1610330777136,"results":"75","hashOfConfig":"51"},{"size":5040,"mtime":1608281078780,"results":"76","hashOfConfig":"51"},{"size":239,"mtime":1608683971454,"results":"77","hashOfConfig":"51"},{"size":2020,"mtime":1608273329834,"results":"78","hashOfConfig":"51"},{"size":5065,"mtime":1608707076736,"results":"79","hashOfConfig":"51"},{"size":1883,"mtime":1608467645498,"results":"80","hashOfConfig":"51"},{"size":7687,"mtime":1594974360917,"results":"81","hashOfConfig":"51"},{"size":411,"mtime":1594541334979,"results":"82","hashOfConfig":"51"},{"size":3156,"mtime":1608707038328,"results":"83","hashOfConfig":"51"},{"size":957,"mtime":1594541334979,"results":"84","hashOfConfig":"51"},{"size":10397,"mtime":1608466526829,"results":"85","hashOfConfig":"51"},{"size":336,"mtime":1594541334979,"results":"86","hashOfConfig":"51"},{"size":853,"mtime":1594541334979,"results":"87","hashOfConfig":"51"},{"size":1123,"mtime":1608466392901,"results":"88","hashOfConfig":"51"},{"size":627,"mtime":1594541334979,"results":"89","hashOfConfig":"51"},{"size":1289,"mtime":1594541334979,"results":"90","hashOfConfig":"51"},{"size":18054,"mtime":1610347417473,"results":"91","hashOfConfig":"51"},{"size":694,"mtime":1608604911846,"results":"92","hashOfConfig":"51"},{"size":552,"mtime":1610334886719,"results":"93","hashOfConfig":"51"},{"size":584,"mtime":1610334911967,"results":"94","hashOfConfig":"51"},{"size":8301,"mtime":1610347540317,"results":"95","hashOfConfig":"51"},{"size":7892,"mtime":1608637015703,"results":"96","hashOfConfig":"51"},{"size":9302,"mtime":1610345752508,"results":"97","hashOfConfig":"51"},{"size":1831,"mtime":1608705928534,"results":"98","hashOfConfig":"51"},{"size":5317,"mtime":1610347394539,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1pbi381",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\git_workspace\\junior-blog\\src\\index.tsx",[],["205","206"],"D:\\git_workspace\\junior-blog\\src\\reportWebVitals.ts",[],"D:\\git_workspace\\junior-blog\\src\\App.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Hello\\index.tsx",[],["207","208"],"D:\\git_workspace\\junior-blog\\src\\components\\AnotherHello\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Header\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Loader\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Container\\index.tsx",["209"],"D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-article-introduction.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\LeeCard\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-detail.tsx",["210","211"],"D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\mockData.tsx",[],["212","213"],"D:\\git_workspace\\junior-blog\\src\\components\\CodeBlock\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\ArticleMenu\\index.tsx",["214"],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Login\\index.tsx",["215","216"],"D:\\git_workspace\\junior-blog\\src\\api\\service.ts",[],"D:\\git_workspace\\junior-blog\\src\\api\\index.ts",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\utils\\useLocalStorage.ts",["217"],"import { useState, useCallback, Dispatch, SetStateAction } from \"react\";\r\n\r\nconst isClient = typeof window === \"object\";\r\n\r\ntype parserOptions<T> =\r\n  | {\r\n      raw: true;\r\n    }\r\n  | {\r\n      raw: false;\r\n      serializer: (value: T) => string;\r\n      deserializer: (value: string) => T;\r\n    };\r\n\r\nconst noop = () => {};\r\n\r\nexport const useLocalStorage = <T>(\r\n  key: string,\r\n  initialValue?: T,\r\n  options?: parserOptions<T>\r\n): [T | undefined, Dispatch<SetStateAction<T | undefined>>, () => void] => {\r\n  if (!isClient) {\r\n    return [initialValue as T, noop, noop];\r\n  }\r\n  if (!key) {\r\n    throw new Error(\"useLocalStorage key may not be falsy\");\r\n  }\r\n\r\n  const deserializer = options\r\n    ? options.raw\r\n      ? (value: any) => value\r\n      : options.deserializer\r\n    : JSON.parse;\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [state, setState] = useState<T | undefined>(() => {\r\n    try {\r\n      const serializer = options\r\n        ? options.raw\r\n          ? String\r\n          : options.serializer\r\n        : JSON.stringify;\r\n\r\n      const localStorageValue = localStorage.getItem(key);\r\n      if (localStorageValue !== null) {\r\n        return deserializer(localStorageValue);\r\n      } else {\r\n        initialValue && localStorage.setItem(key, serializer(initialValue));\r\n        return initialValue;\r\n      }\r\n    } catch {\r\n      // If user is in private mode or has storage restriction\r\n      // localStorage can throw. JSON.parse and JSON.stringify\r\n      // can throw, too.\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const set: Dispatch<SetStateAction<T | undefined>> = useCallback(\r\n    (valOrFunc) => {\r\n      try {\r\n        const newState =\r\n          typeof valOrFunc === \"function\"\r\n            ? (valOrFunc as Function)(state)\r\n            : valOrFunc;\r\n        if (typeof newState === \"undefined\") return;\r\n        let value: string;\r\n\r\n        if (options)\r\n          if (options.raw)\r\n            if (typeof newState === \"string\") value = newState;\r\n            else value = JSON.stringify(newState);\r\n          else if (options.serializer) value = options.serializer(newState);\r\n          else value = JSON.stringify(newState);\r\n        else value = JSON.stringify(newState);\r\n\r\n        localStorage.setItem(key, value);\r\n        setState(deserializer(value));\r\n      } catch {\r\n        // If user is in private mode or has storage restriction\r\n        // localStorage can throw. Also JSON.stringify can throw.\r\n      }\r\n    },\r\n    [key, setState]\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const remove = useCallback(() => {\r\n    try {\r\n      localStorage.removeItem(key);\r\n      setState(undefined);\r\n    } catch {\r\n      // If user is in private mode or has storage restriction\r\n      // localStorage can throw.\r\n    }\r\n  }, [key, setState]);\r\n\r\n  return [state, set, remove];\r\n};\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\AddArticle\\index.tsx",["218"],"import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport marked from \"marked\";\r\nimport hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/monokai-sublime.css\";\r\nimport style from \"./index.module.less\";\r\nimport \"../../../../publicCSS/style.css\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  DatePicker,\r\n  message,\r\n  Modal,\r\n} from \"antd\";\r\nimport {\r\n  addBlogArticle,\r\n  AddBlogArticleI,\r\n  BlogArticleListI,\r\n  getBlogArticleById,\r\n  updateBlogArticleById,\r\n  updateBlogArticleByIdI,\r\n} from \"../../../../api/service\";\r\nimport Loader from \"../../../../components/Loader\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport imageselect from \"../../../../image/imageselect.png\";\r\nimport ImageUpload from \"../../../Admin/ImageUpload\";\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst renderer = new marked.Renderer();\r\nmarked.setOptions({\r\n  renderer: renderer,\r\n  gfm: true, //启动类似Github样式的Markdown,填写true或者false\r\n  pedantic: false, //只解析符合Markdown定义的，不修正Markdown的错误。填写true或者false\r\n  sanitize: false, //原始输出，忽略HTML标签，这个作为一个开发人员，一定要写flase\r\n  //tables: true, //支持Github形式的表格，必须打开gfm选项\r\n  breaks: true, //支持Github换行符，必须打开gfm选项，填写true或者false\r\n  smartLists: true, //优化列表输出，这个填写ture之后，你的样式会好看很多，所以建议设置成ture\r\n  smartypants: true,\r\n  highlight: function (code) {\r\n    return hljs.highlightAuto(code).value;\r\n  },\r\n});\r\n\r\nexport interface ArticleI {\r\n  articleId: number; // 0; // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n  // oldarticleTitle: \"\"; //以前的标题(保存后在数据库依照此标题修改)\r\n  articleTitle: string; // \"\"; //文章标题\r\n  articleContent: string; // \"\"; //markdown的编辑内容\r\n  markdownContent: string; // \"预览内容\"; //html内容\r\n  introducemd: string; // \"\"; //简介的markdown内容\r\n  introducehtml: string; // \"等待编辑\"; //简介的html内容\r\n  publishDate: string; // \"\"; //发布日期\r\n  updateDate: string; // \"\"; //修改日志的日期(未使用)\r\n  // typeInfo: []; // 文章类别信息(未使用)\r\n  selectedType: number | string; //选择的文章类别\r\n  sourceType: number | string; // \"\"; //文章来源  原创 || 转载\r\n  introduceImage: string; // 列表页简介图片\r\n\r\n  //   disabled: false; //修改文章后按钮不可点击\r\n  //   titledisabled: false; //标题改变控制按钮不可点击\r\n}\r\n\r\ninterface RouterInfo {\r\n  id: string;\r\n}\r\n\r\nexport default function AddArticle(props: RouteComponentProps<RouterInfo>) {\r\n  const initial: ArticleI = {\r\n    articleId: 0, // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n    articleTitle: \"\", //文章标题\r\n    articleContent: \"\", //markdown的编辑内容\r\n    markdownContent: \"预览内容\", //html内容\r\n    introducemd: \"\", //简介的markdown内容\r\n    introducehtml: \"等待编辑\", //简介的html内容\r\n    publishDate: \"\", //发布日期\r\n    updateDate: \"\", //修改日志的日期(未使用)\r\n    // typeInfo: [], // 文章类别信息(未使用)\r\n    selectedType: -1, //选择的文章类别\r\n    sourceType: -1, //文章来源\r\n    introduceImage: \"\",\r\n  };\r\n  const [article, setArticle] = useState<ArticleI>(initial);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n\r\n  const changeContent = (value: string) => {\r\n    const html = marked(value);\r\n    setArticle({ ...article, articleContent: value, markdownContent: html });\r\n  };\r\n\r\n  const changeIntroduce = (value: string) => {\r\n    const html = marked(value);\r\n    setArticle({ ...article, introducemd: value, introducehtml: html });\r\n  };\r\n\r\n  const publishArticle = () => {\r\n    if (condition()) {\r\n      message.success(\"存储校验通过\");\r\n      if (!article.articleId) {\r\n        message.success(\"新的存储\");\r\n        const article_title = article.articleTitle;\r\n        const article_content = article.articleContent;\r\n        const markdown_content = article.markdownContent;\r\n        const introducemd = article.introducemd;\r\n        const introducehtml = article.introducehtml;\r\n        const publish_date = article.publishDate;\r\n        const update_date = \"\";\r\n        const article_type = article.selectedType as number;\r\n        const article_source_type = article.sourceType as number;\r\n        const introduce_image = article.introduceImage;\r\n\r\n        const data: AddBlogArticleI = {\r\n          article_title,\r\n          article_content,\r\n          markdown_content,\r\n          introducemd,\r\n          introducehtml,\r\n          publish_date,\r\n          update_date,\r\n          article_type,\r\n          article_source_type,\r\n          introduce_image,\r\n        };\r\n\r\n        setLoading(true);\r\n        addBlogArticle(data)\r\n          .then((res) => {\r\n            setLoading(false);\r\n            if (res.code === 200) {\r\n              message.success(res.message);\r\n              props.history.push(\"/admin/articleList\");\r\n            } else {\r\n              message.error(res.message);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false);\r\n            message.error(\"不好意思，服务器出错了\");\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        message.success(\"修改之前已存储的\");\r\n        const id = article.articleId;\r\n        const article_title = article.articleTitle;\r\n        const article_content = article.articleContent;\r\n        const markdown_content = article.markdownContent;\r\n        const introducemd = article.introducemd;\r\n        const introducehtml = article.introducehtml;\r\n        const publish_date = article.publishDate;\r\n        const update_date = \"\";\r\n        const article_type = article.selectedType as number;\r\n        const article_source_type = article.sourceType as number;\r\n        const introduce_image = article.introduceImage;\r\n\r\n        const data: updateBlogArticleByIdI = {\r\n          id,\r\n          article_title,\r\n          article_content,\r\n          markdown_content,\r\n          introducemd,\r\n          introducehtml,\r\n          publish_date,\r\n          update_date,\r\n          article_type,\r\n          article_source_type,\r\n          introduce_image,\r\n        };\r\n        updateBlogArticleById(data)\r\n          .then((res) => {\r\n            setLoading(false);\r\n            if (res.code === 200) {\r\n              message.success(res.message);\r\n              props.history.push(\"/admin/articleList\");\r\n            } else {\r\n              message.error(res.message);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false);\r\n            message.error(\"不好意思，服务器出错了\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveArticle = () => {\r\n    if (condition()) {\r\n      message.success(\"存储校验通过\");\r\n      if (!article.articleId) {\r\n        message.success(\"新的存储\");\r\n      } else {\r\n      }\r\n    }\r\n  };\r\n\r\n  const condition = () => {\r\n    if (!article.articleTitle) {\r\n      message.warning(\"文章标题不能为空\");\r\n      return false;\r\n    } else if (article.selectedType === -1) {\r\n      message.warning(\"必须选择文章类型\");\r\n      return false;\r\n    } else if (article.sourceType === -1) {\r\n      message.warning(\"文章来源不能为空\");\r\n      return false;\r\n    } else if (!article.articleContent) {\r\n      message.warning(\"文章内容不能为空\");\r\n      return false;\r\n    } else if (!article.introducemd) {\r\n      message.warning(\"文章简介不能为空\");\r\n      return false;\r\n    } else if (!article.publishDate) {\r\n      message.warning(\"发布日期不能为空\");\r\n      return false;\r\n    } else if (!article.introduceImage) {\r\n      message.warning(\"简介图片不能为空\");\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // 如果是查看页面，根据url的id初始化data\r\n  useEffect(() => {\r\n    console.log(\"id\", props.match.params.id);\r\n    const id = props.match.params.id;\r\n    if (id) {\r\n      getBlogArticleById(parseInt(id))\r\n        .then((res) => {\r\n          console.log(\"by id\", res);\r\n          if (res.data) {\r\n            const filterData = res.data as BlogArticleListI;\r\n            setArticle({\r\n              articleId: filterData.id,\r\n              articleTitle: filterData.article_title, //文章标题\r\n              articleContent: filterData.article_content, //markdown的编辑内容\r\n              markdownContent: filterData.markdown_content, //html内容\r\n              introducemd: filterData.introducemd, //简介的markdown内容\r\n              introducehtml: filterData.introducehtml, //简介的html内容\r\n              publishDate: filterData.publish_date, //发布日期\r\n              updateDate: filterData.update_date, //修改日志的日期(未使用)\r\n              // typeInfo: [], // 文章类别信息(未使用)\r\n              selectedType: filterData.article_type, //选择的文章类别\r\n              sourceType: filterData.article_source_type, //文章来源\r\n              introduceImage: filterData.introduce_image,\r\n            });\r\n          } else {\r\n            // 文章不存在 TODO直接跳转至首页\r\n            setTimeout(() => {\r\n              message.warning(\"opps,找不到该文章\");\r\n              props.history.replace(\"/admin/articleList\");\r\n            }, 1000);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          message.error(\"不好意思，服务器出错了\");\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [props.match.params]);\r\n\r\n  // 监听保存快捷键的 effect\r\n  useEffect(() => {\r\n    const handleSave = (e: KeyboardEvent) => {\r\n      if (\r\n        e.key === \"s\" &&\r\n        (navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey)\r\n      ) {\r\n        e.preventDefault();\r\n        alert(\"modified, saved\");\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleSave);\r\n\r\n    return () => document.removeEventListener(\"keydown\", handleSave);\r\n  }, []);\r\n  return (\r\n    <Loader loading={loading}>\r\n      <Row gutter={10}>\r\n        {/* 主体内容左侧部分 */}\r\n        <Col span={18}>\r\n          <Row gutter={10}>\r\n            <Col span={16}>\r\n              <Input\r\n                placeholder=\"博客标题\"\r\n                value={article.articleTitle}\r\n                onChange={(e) => {\r\n                  setArticle({ ...article, articleTitle: e.target.value });\r\n                }}\r\n                size=\"large\"\r\n              />\r\n            </Col>\r\n\r\n            <Col span={4} style={{ paddingLeft: \"21px\" }}>\r\n              <Select\r\n                className={style[\"select\"]}\r\n                value={\r\n                  article.selectedType === -1\r\n                    ? \"请选择文章类型\"\r\n                    : article.selectedType\r\n                }\r\n                size=\"large\"\r\n                onChange={(value) =>\r\n                  setArticle({ ...article, selectedType: value })\r\n                }\r\n              >\r\n                <Option value={0}>博客分享</Option>\r\n                <Option value={1}>Leetcode训练</Option>\r\n              </Select>\r\n            </Col>\r\n\r\n            <Col span={4}>\r\n              <Select\r\n                className={style[\"select\"]}\r\n                value={\r\n                  article.sourceType === -1\r\n                    ? \"请选择文章来源\"\r\n                    : article.selectedType\r\n                }\r\n                size=\"large\"\r\n                onChange={(value) =>\r\n                  setArticle({ ...article, sourceType: value })\r\n                }\r\n              >\r\n                <Option value={0}>博主原创</Option>\r\n                <Option value={1}>美文转载</Option>\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row gutter={10}>\r\n            <Col span={12}>\r\n              <TextArea\r\n                value={article.articleContent}\r\n                className={style[\"markdown-content\"]}\r\n                rows={60}\r\n                placeholder=\"文章内容\"\r\n                onChange={(e) => changeContent(e.target.value)}\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <div\r\n                className={`${style[\"show-html\"]} markdown`}\r\n                dangerouslySetInnerHTML={{ __html: article.markdownContent }}\r\n              ></div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {/* 主体内容右侧部分 */}\r\n        <Col span={6}>\r\n          <Row>\r\n            {/* <Col span={24}> */}\r\n            <Col span={8}>\r\n              <Button size=\"large\" onClick={saveArticle}>\r\n                暂存文章\r\n              </Button>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button type=\"primary\" size=\"large\" onClick={publishArticle}>\r\n                {article.articleId > 0 ? \"确认修改\" : \"发布文章\"}\r\n              </Button>\r\n            </Col>\r\n            {/* </Col> */}\r\n            <Col span={24}>\r\n              <br />\r\n              <TextArea\r\n                className={style[\"introduce-content\"]}\r\n                rows={8}\r\n                placeholder=\"文章简介\"\r\n                value={article.introducemd}\r\n                onChange={(e) => {\r\n                  changeIntroduce(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              {/* <br /> */}\r\n              {/* <div\r\n                className={`${style[\"introduce-html\"]} markdown`}\r\n                dangerouslySetInnerHTML={{ __html: article.introducehtml }}\r\n              ></div> */}\r\n            </Col>\r\n            <Col span={12}>\r\n              <div className={style[\"date-select\"]}>\r\n                <DatePicker\r\n                  value={\r\n                    !article.publishDate ? null : moment(article.publishDate)\r\n                  }\r\n                  placeholder=\"发布日期\"\r\n                  size=\"large\"\r\n                  onChange={(date, dateString) =>\r\n                    setArticle({ ...article, publishDate: dateString })\r\n                  }\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col span={12} style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n              <div className={style[\"introduce-image-select\"]}>\r\n                <Input\r\n                  placeholder=\"博客简介图片\"\r\n                  value={article.introduceImage}\r\n                  size=\"large\"\r\n                  onChange={(e) => {\r\n                    setArticle({ ...article, introduceImage: e.target.value });\r\n                  }}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col span={12} style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n              <div\r\n                className={style[\"image-select\"]}\r\n                onClick={() => setVisible(true)}\r\n              >\r\n                <img src={imageselect} alt=\"\" />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        visible={visible}\r\n        maskClosable={false}\r\n        width={1366}\r\n        onCancel={() => setVisible(false)}\r\n        onOk={() => setVisible(false)}\r\n      >\r\n        <ImageUpload />\r\n      </Modal>\r\n    </Loader>\r\n  );\r\n}\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\IndexPage\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\test.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\ImageUpload\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\ArticleList\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\const\\index.ts",[],"D:\\git_workspace\\junior-blog\\src\\components\\Tocify\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\DraftList\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\imperative-dialog\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\cssMixin.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\close.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\hooks.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\click.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\button.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\divider.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\styles.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Interact\\index.tsx",["219","220"],"D:\\git_workspace\\junior-blog\\src\\components\\Reply\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\QQCard\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\WechatCard\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Images\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Pictures\\index.js",["221","222","223","224"],"D:\\git_workspace\\junior-blog\\src\\components\\Images\\index.tsx",["225","226"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport \"./picture.css\";\r\nimport { useImperativeDialog } from \"../../components/imperative-dialog\";\r\nimport ImageViewer from \"../../components/image-viewer\";\r\nimport { Col, Row, Spin, Tooltip } from \"antd\";\r\nimport { ImageDataI } from \"../../pages/Admin/ImageUpload\";\r\nimport { CopyOutlined, EyeOutlined } from \"@ant-design/icons\";\r\n\r\n// const baseUrl = \"http://127.0.0.1:7001/default/getImage/\";\r\nconst baseUrl = \"http://129.204.231.203:82/imgspace/\";\r\n\r\ninterface ImagesI {\r\n  category: string; // 图片分类\r\n  imageData: ImageDataI[]; // 图片数量\r\n  header?: boolean;\r\n}\r\n/**\r\n * 和 pages 中的 Images大致相同，只不过这个可以接收参数（之前那个路由组件传参不方便）\r\n * @param props : ImagesI\r\n */\r\nfunction Images(props: ImagesI) {\r\n  const { imageData, header = true } = props;\r\n\r\n  // const [data, setData] = useState<number[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const isload = useRef<number>(0);\r\n  const [modal, open] = useImperativeDialog(ImageViewer as any, {\r\n    images: imageData.map((item) => `${baseUrl}${item.source}`),\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   isload.current = 0;\r\n  //   console.log(\"images effect\");\r\n  //   let arr = new Array(74);\r\n  //   for (let i = 0; i < arr.length; ++i) {\r\n  //     arr[i] = i;\r\n  //   }\r\n  //   setData(arr);\r\n  // }, []);\r\n\r\n  const domPull = () => {\r\n    var main = document.getElementById(\"main\") as HTMLElement;\r\n    var box = document.getElementsByClassName(\"box\");\r\n    //实现瀑布流布局\r\n    // setTimeout(()=>{ //图片如未加载完成 则布局错误\r\n    waterFull(main, box);\r\n    // },1000)\r\n\r\n    // //加载数据\r\n    // var timer1: any = null;\r\n    // window.addEventListener(\"scroll\", function (e) {\r\n    //   if (timer1) clearTimeout(timer1);\r\n    //   //节流\r\n    //   timer1 = setTimeout(function () {\r\n    //     if (checkWillLoadNewBox(main, box)) {\r\n    //       //假数据模仿数据加载\r\n    //       let arr = new Array(74); //30-60数组\r\n    //       for (let i = 0; i < arr.length; i++) {\r\n    //         arr[i] = i;\r\n    //       }\r\n    //       //遍历数据\r\n    //       for (let i = 0; i < arr.length; i++) {\r\n    //         var newBox = document.createElement(\"div\");\r\n    //         newBox.className = \"box\";\r\n    //         main.appendChild(newBox);\r\n\r\n    //         var newPic = document.createElement(\"div\");\r\n    //         newPic.className = \"pic\";\r\n    //         newBox.appendChild(newPic);\r\n\r\n    //         var newImg = document.createElement(\"img\");\r\n    //         newImg.src =\r\n    //           \"https://www.jsfan.net/some/lifeimg/life%20(\" + arr[i] + \").jpg\";\r\n    //         console.log(\"newImg.src\", newImg.src);\r\n    //         // newImg.addEventListener('click',()=>{Zmage.browsing({ src:\"https://www.jsfan.net/some/lifeimg/life%20(\"+arr[i]+\").jpg\" })})\r\n    //         newPic.appendChild(newImg);\r\n    //       }\r\n    //       //重新进行瀑布流布局\r\n    //       waterFull(main, box);\r\n    //     }\r\n    //   }, 200);\r\n    // });\r\n\r\n    //页面尺寸发生改变重新布局\r\n    var timer2: any = null;\r\n    window.addEventListener(\"resize\", function () {\r\n      if (timer2) clearTimeout(timer2);\r\n      //节流\r\n      timer2 = setTimeout(function () {\r\n        waterFull(main, box);\r\n      }, 200);\r\n    });\r\n  };\r\n\r\n  const waterFull = (parent: any, child: any) => {\r\n    //(1)父盒子居中\r\n    //1.1 获取所有子盒子\r\n    //1.2 获取其中一个子盒子的宽度\r\n    try {\r\n      var boxWidth = child[0].offsetWidth;\r\n    } catch (error) {\r\n      return;\r\n    }\r\n\r\n    //1.3 获取窗口的宽度\r\n    // var screenW = document.body.clientWidth\r\n    //1.3 获取col的宽度\r\n    var coldom = document.getElementsByClassName(\"comm-left\")[0] as HTMLElement;\r\n    var screenW = coldom.offsetWidth as number;\r\n    // console.log(screenW)\r\n    //1.4 求出列数\r\n    var cols = Math.floor(screenW / boxWidth);\r\n    // console.log(cols)\r\n    //1.5 父盒子居中\r\n    parent.style.width = cols * boxWidth + \"px\";\r\n    parent.style.margin = \"0 auto\";\r\n\r\n    //(2)子盒子定位\r\n    //2.1 定义变量\r\n    var heightArr = [];\r\n    var boxHeight = 0;\r\n    var minBoxHeight = 0;\r\n    var minBoxIndex;\r\n    //2.2 遍历所有盒子获取高度\r\n    for (let i = 0; i < child.length; i++) {\r\n      boxHeight = child[i].offsetHeight;\r\n      //2.3 判断是否为第一行\r\n      if (i < cols) {\r\n        heightArr.push(boxHeight);\r\n        child[i].style = \"\"; //(响应式布局)保证第一行没有添加样式\r\n      } else {\r\n        //剩余行做定位\r\n        //2.4 取出数组中最矮盒子的高度\r\n        let arrSort = heightArr.slice(0); //sort排序后，会影响原始数组 解决方案\r\n        arrSort.sort(function (a, b) {\r\n          return a - b;\r\n        });\r\n        // console.log(arrSort[0]) //最小\r\n        //console.log(arrSort[arrSort.length-1]) //最大\r\n        minBoxHeight = arrSort[0];\r\n        //2.5 取出最矮盒子在数组中的索引\r\n        minBoxIndex = getMinBoxIndex(heightArr, minBoxHeight);\r\n        // console.log(minBoxIndex)\r\n        //2.6 剩余子盒子的定位\r\n        child[i].style.position = \"absolute\";\r\n        child[i].style.left = minBoxIndex * boxWidth + \"px\";\r\n        child[i].style.top = minBoxHeight + \"px\";\r\n      }\r\n      //2.7 更新高度\r\n      heightArr[minBoxIndex as number] += boxHeight;\r\n    }\r\n\r\n    // console.log(heightArr, minBoxHeight)\r\n    let arrSortmax = heightArr.slice(0); //sort排序后，会影响原始数组 解决方案\r\n    arrSortmax.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    // console.log(arrSortmax[arrSortmax.length-1]) //最大\r\n    coldom.style.height = arrSortmax[arrSortmax.length - 1] + \"px\";\r\n  };\r\n  const getMinBoxIndex = (arr: any, val: any) => {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i] === val) {\r\n        return i;\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n  // const checkWillLoadNewBox = (parent: any, child: any) => {\r\n  //   //1. 获取最后的盒子\r\n  //   var lastBox = child[child.length - 1];\r\n  //   //2. 求最后盒子高度的一半\r\n  //   try {\r\n  //     var lastBoxDis = lastBox.offsetHeight * 0.5 + lastBox.offsetTop;\r\n  //   } catch (error) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   //3. 求出页面高度\r\n  //   var screenH =\r\n  //     document.body.clientHeight || document.documentElement.clientHeight;\r\n  //   //4. 求出页面滚出浏览器高度\r\n  //   var scrollTopH = document.documentElement.scrollTop;\r\n  //   //5. 返回结果\r\n  //   return lastBoxDis <= screenH + scrollTopH;\r\n  // };\r\n\r\n  const load = () => {\r\n    isload.current += 1;\r\n    if (isload.current === imageData.length) {\r\n      setLoading(false);\r\n      domPull();\r\n    }\r\n  };\r\n\r\n  useEffect(() => domPull(), [imageData]);\r\n\r\n  useEffect(() => {\r\n    imageData.length === 0 && setLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {header ? <Header /> : null}\r\n\r\n      <Row\r\n        className=\"comm-main\"\r\n        justify={header ? \"center\" : \"start\"}\r\n        style={header ? { paddingTop: \"5rem\" } : { paddingTop: \"1rem\" }}\r\n      >\r\n        <Col\r\n          className=\"comm-left\"\r\n          xs={24}\r\n          sm={24}\r\n          md={23}\r\n          lg={23}\r\n          xl={header ? 18 : 24}\r\n          style={{\r\n            padding: 0,\r\n            backgroundColor: \"rgba(255,255,255,.4)\",\r\n            borderRadius: \"1rem\",\r\n          }}\r\n        >\r\n          <Spin tip=\"加载中...\" spinning={loading}>\r\n            <div id=\"main\">\r\n              {imageData.length > 0 ? (\r\n                imageData.map((item, key) => (\r\n                  <div className=\"box\" key={key}>\r\n                    <div className=\"pic\">\r\n                      <div className=\"suofanga\" style={{ overflow: \"hidden\" }}>\r\n                        <img\r\n                          className=\"divimg\"\r\n                          src={`${baseUrl}${item.source}`}\r\n                          onLoad={() => load()}\r\n                          alt=\"\"\r\n                        />\r\n                        <div className=\"cover\">\r\n                          <span\r\n                            onClick={(e) => {\r\n                              open({ initialIndex: key }, e);\r\n                            }}\r\n                          >\r\n                            <EyeOutlined />\r\n                          </span>\r\n                          <Tooltip\r\n                            title={`${baseUrl}${item.source}`}\r\n                            placement=\"top\"\r\n                          >\r\n                            <span>\r\n                              <CopyOutlined />\r\n                            </span>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div\r\n                  style={{ padding: \"1rem\", fontSize: \"1rem\", color: \"#666\" }}\r\n                >\r\n                  该分类暂无图片。\r\n                </div>\r\n              )}\r\n            </div>\r\n          </Spin>\r\n        </Col>\r\n      </Row>\r\n      {modal}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Images);\r\n","D:\\git_workspace\\junior-blog\\src\\components\\ArticleTag\\index.tsx",["227"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getArticleTags } from \"../../api/service\";\r\nimport style from \"./index.module.less\";\r\n\r\ninterface TagI {\r\n  id: number;\r\n  type: number;\r\n  type_name: string;\r\n}\r\nfunction ArticleTag() {\r\n  const [tags, setTags] = useState<TagI[]>([]);\r\n  const [currentIndex, setCurrentIndex] = useState<number>(-1);\r\n\r\n  // 获取文章标签\r\n  useEffect(() => {\r\n    getArticleTags().then((res) => {\r\n      //   console.log(\"res in article tags\", res);\r\n      setTags(res.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const path = window.location.pathname.split(\"/\");\r\n    let index = \"-1\";\r\n    if (path[1] === \"blog\") {\r\n      index = path[2].replace(/[^0-9]/gi, \"\");\r\n    }\r\n    // console.log(\"index\", index);\r\n    setCurrentIndex(parseInt(index));\r\n  });\r\n  return (\r\n    <div className={`${style[\"tag-wrap\"]} animated fadeInRight`}>\r\n      <div className={style[\"tag-header\"]}>文章分类</div>\r\n      <ul className={style[\"tag-context\"]}>\r\n        <Link to=\"/\">\r\n          <li\r\n            className={`${style[\"tag\"]} ${\r\n              currentIndex === -1 ? style[\"current\"] : \"\"\r\n            }`}\r\n          >\r\n            全部文章\r\n          </li>\r\n        </Link>\r\n        {tags.map((item) => (\r\n          <Link\r\n            to={{\r\n              pathname: \"/blog/tag\" + item.type,\r\n              state: { type: item.type },\r\n            }}\r\n            key={item.id}\r\n          >\r\n            <li\r\n              className={`${style[\"tag\"]} ${\r\n                currentIndex === item.type ? style[\"current\"] : \"\"\r\n              }`}\r\n            >\r\n              {item.type_name}\r\n            </li>\r\n          </Link>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ArticleTag);\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\About\\index.tsx",["228"],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"229","replacedBy":"233"},{"ruleId":"231","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":34},{"ruleId":"239","severity":1,"message":"240","line":136,"column":6,"nodeType":"241","endLine":136,"endColumn":31,"suggestions":"242"},{"ruleId":"239","severity":1,"message":"243","line":160,"column":6,"nodeType":"241","endLine":160,"endColumn":17,"suggestions":"244"},{"ruleId":"229","replacedBy":"245"},{"ruleId":"231","replacedBy":"246"},{"ruleId":"235","severity":1,"message":"247","line":33,"column":11,"nodeType":"237","messageId":"238","endLine":33,"endColumn":17},{"ruleId":"235","severity":1,"message":"248","line":27,"column":10,"nodeType":"237","messageId":"238","endLine":27,"endColumn":15},{"ruleId":"235","severity":1,"message":"249","line":27,"column":27,"nodeType":"237","messageId":"238","endLine":27,"endColumn":38},{"ruleId":"239","severity":1,"message":"250","line":85,"column":5,"nodeType":"241","endLine":85,"endColumn":20,"suggestions":"251"},{"ruleId":"239","severity":1,"message":"240","line":265,"column":6,"nodeType":"241","endLine":265,"endColumn":26,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":264,"column":19,"nodeType":"255","endLine":264,"endColumn":45},{"ruleId":"256","severity":1,"message":"257","line":289,"column":28,"nodeType":"258","messageId":"259","endLine":289,"endColumn":30},{"ruleId":"260","severity":1,"message":"261","line":5,"column":10,"nodeType":"237","messageId":"238","endLine":5,"endColumn":29},{"ruleId":"260","severity":1,"message":"262","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":19},{"ruleId":"256","severity":1,"message":"257","line":191,"column":16,"nodeType":"258","messageId":"259","endLine":191,"endColumn":18},{"ruleId":"263","severity":1,"message":"264","line":228,"column":25,"nodeType":"255","endLine":237,"endColumn":27},{"ruleId":"239","severity":1,"message":"265","line":197,"column":30,"nodeType":"241","endLine":197,"endColumn":41,"suggestions":"266"},{"ruleId":"239","severity":1,"message":"267","line":201,"column":6,"nodeType":"241","endLine":201,"endColumn":8,"suggestions":"268"},{"ruleId":"239","severity":1,"message":"269","line":23,"column":3,"nodeType":"237","endLine":23,"endColumn":12,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":115,"column":21,"nodeType":"273","endLine":115,"endColumn":36},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],["274"],["275"],"@typescript-eslint/no-unused-vars","'PropsWithChildren' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["276"],"React Hook useEffect has missing dependencies: 'data?.id' and 'data?.remark'. Either include them or remove the dependency array.",["277"],["274"],["275"],"'source' is assigned a value but never used.","'token' is assigned a value but never used.","'removeToken' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'deserializer', 'options', and 'state'. Either include them or remove the dependency array.",["278"],["279"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useImperativeDialog' is defined but never used.","'ImageViewer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'domPull'. Either include it or remove the dependency array.",["280"],"React Hook useEffect has a missing dependency: 'imageData.length'. Either include it or remove the dependency array.",["281"],"React Hook useEffect contains a call to 'setCurrentIndex'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["282"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},"Update the dependencies array to be: [props.history, props.location.pathname]",{"range":"297","text":"298"},"Update the dependencies array to be: [data?.id, data?.remark, isAsisted]",{"range":"299","text":"300"},"Update the dependencies array to be: [deserializer, key, options, state]",{"range":"301","text":"302"},"Update the dependencies array to be: [props.history, props.match.params]",{"range":"303","text":"304"},"Update the dependencies array to be: [domPull, imageData]",{"range":"305","text":"306"},"Update the dependencies array to be: [imageData.length]",{"range":"307","text":"308"},"Add dependencies array: []",{"range":"309","text":"310"},[4378,4403],"[props.history, props.location.pathname]",[4945,4956],"[data?.id, data?.remark, isAsisted]",[2546,2561],"[deserializer, key, options, state]",[8721,8741],"[props.history, props.match.params]",[6261,6272],"[domPull, imageData]",[6354,6356],"[imageData.length]",[857,857],", []"]