[{"D:\\git_workspace\\junior-blog\\src\\index.tsx":"1","D:\\git_workspace\\junior-blog\\src\\reportWebVitals.ts":"2","D:\\git_workspace\\junior-blog\\src\\App.tsx":"3","D:\\git_workspace\\junior-blog\\src\\components\\Hello\\index.tsx":"4","D:\\git_workspace\\junior-blog\\src\\components\\AnotherHello\\index.tsx":"5","D:\\git_workspace\\junior-blog\\src\\components\\Header\\index.tsx":"6","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\index.tsx":"7","D:\\git_workspace\\junior-blog\\src\\components\\Loader\\index.tsx":"8","D:\\git_workspace\\junior-blog\\src\\components\\Container\\index.tsx":"9","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-article-introduction.tsx":"10","D:\\git_workspace\\junior-blog\\src\\components\\LeeCard\\index.tsx":"11","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-detail.tsx":"12","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\mockData.tsx":"13","D:\\git_workspace\\junior-blog\\src\\components\\CodeBlock\\index.tsx":"14","D:\\git_workspace\\junior-blog\\src\\components\\ArticleMenu\\index.tsx":"15","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Login\\index.tsx":"16","D:\\git_workspace\\junior-blog\\src\\api\\service.ts":"17","D:\\git_workspace\\junior-blog\\src\\api\\index.ts":"18","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\index.tsx":"19","D:\\git_workspace\\junior-blog\\src\\utils\\useLocalStorage.ts":"20","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\AddArticle\\index.tsx":"21","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\IndexPage\\index.tsx":"22","D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\index.tsx":"23","D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\test.tsx":"24","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\ImageUpload\\index.tsx":"25","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\ArticleList\\index.tsx":"26","D:\\git_workspace\\junior-blog\\src\\const\\index.ts":"27","D:\\git_workspace\\junior-blog\\src\\components\\Tocify\\index.tsx":"28","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\DraftList\\index.tsx":"29","D:\\git_workspace\\junior-blog\\src\\components\\imperative-dialog\\index.tsx":"30","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\index.tsx":"31","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\cssMixin.tsx":"32","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar.tsx":"33","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\close.tsx":"34","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\hooks.tsx":"35","D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\click.tsx":"36","D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\index.tsx":"37","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\button.tsx":"38","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\divider.tsx":"39","D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\styles.tsx":"40","D:\\git_workspace\\junior-blog\\src\\pages\\Interact\\index.tsx":"41","D:\\git_workspace\\junior-blog\\src\\components\\Reply\\index.tsx":"42","D:\\git_workspace\\junior-blog\\src\\components\\QQCard\\index.tsx":"43","D:\\git_workspace\\junior-blog\\src\\components\\WechatCard\\index.tsx":"44","D:\\git_workspace\\junior-blog\\src\\pages\\Images\\index.tsx":"45","D:\\git_workspace\\junior-blog\\src\\pages\\Pictures\\index.js":"46","D:\\git_workspace\\junior-blog\\src\\components\\Images\\index.tsx":"47","D:\\git_workspace\\junior-blog\\src\\components\\ArticleTag\\index.tsx":"48"},{"size":449,"mtime":1608014455962,"results":"49","hashOfConfig":"50"},{"size":425,"mtime":499162500000,"results":"51","hashOfConfig":"50"},{"size":1352,"mtime":1608703738166,"results":"52","hashOfConfig":"50"},{"size":1028,"mtime":1607674880842,"results":"53","hashOfConfig":"50"},{"size":324,"mtime":1607675095000,"results":"54","hashOfConfig":"50"},{"size":4505,"mtime":1608630450683,"results":"55","hashOfConfig":"50"},{"size":2405,"mtime":1608706400487,"results":"56","hashOfConfig":"50"},{"size":561,"mtime":1608084953157,"results":"57","hashOfConfig":"50"},{"size":1201,"mtime":1608120775535,"results":"58","hashOfConfig":"50"},{"size":4279,"mtime":1608271028194,"results":"59","hashOfConfig":"50"},{"size":2517,"mtime":1608626958079,"results":"60","hashOfConfig":"50"},{"size":8171,"mtime":1608692132366,"results":"61","hashOfConfig":"50"},{"size":900,"mtime":1608016552596,"results":"62","hashOfConfig":"50"},{"size":271,"mtime":1607996760877,"results":"63","hashOfConfig":"50"},{"size":1734,"mtime":1608273581374,"results":"64","hashOfConfig":"50"},{"size":3464,"mtime":1608176912428,"results":"65","hashOfConfig":"50"},{"size":5019,"mtime":1608701629602,"results":"66","hashOfConfig":"50"},{"size":1381,"mtime":1608624870283,"results":"67","hashOfConfig":"50"},{"size":4913,"mtime":1608280443490,"results":"68","hashOfConfig":"50"},{"size":2925,"mtime":1608086129643,"results":"69","hashOfConfig":"50"},{"size":15500,"mtime":1608699623674,"results":"70","hashOfConfig":"50"},{"size":822,"mtime":1608100736826,"results":"71","hashOfConfig":"50"},{"size":3418,"mtime":1608269834534,"results":"72","hashOfConfig":"50"},{"size":8281,"mtime":1608704765401,"results":"73","hashOfConfig":"50"},{"size":4609,"mtime":1608695440515,"results":"74","hashOfConfig":"50"},{"size":5040,"mtime":1608281078780,"results":"75","hashOfConfig":"50"},{"size":239,"mtime":1608683971454,"results":"76","hashOfConfig":"50"},{"size":2020,"mtime":1608273329834,"results":"77","hashOfConfig":"50"},{"size":5088,"mtime":1608281853785,"results":"78","hashOfConfig":"50"},{"size":1883,"mtime":1608467645498,"results":"79","hashOfConfig":"50"},{"size":7687,"mtime":1594974360917,"results":"80","hashOfConfig":"50"},{"size":411,"mtime":1594541334979,"results":"81","hashOfConfig":"50"},{"size":3471,"mtime":1594541334979,"results":"82","hashOfConfig":"50"},{"size":957,"mtime":1594541334979,"results":"83","hashOfConfig":"50"},{"size":10397,"mtime":1608466526829,"results":"84","hashOfConfig":"50"},{"size":336,"mtime":1594541334979,"results":"85","hashOfConfig":"50"},{"size":853,"mtime":1594541334979,"results":"86","hashOfConfig":"50"},{"size":1123,"mtime":1608466392901,"results":"87","hashOfConfig":"50"},{"size":627,"mtime":1594541334979,"results":"88","hashOfConfig":"50"},{"size":1289,"mtime":1594541334979,"results":"89","hashOfConfig":"50"},{"size":18038,"mtime":1608628777850,"results":"90","hashOfConfig":"50"},{"size":694,"mtime":1608604911846,"results":"91","hashOfConfig":"50"},{"size":526,"mtime":1608628378414,"results":"92","hashOfConfig":"50"},{"size":558,"mtime":1608628752243,"results":"93","hashOfConfig":"50"},{"size":8157,"mtime":1608704619950,"results":"94","hashOfConfig":"50"},{"size":7892,"mtime":1608637015703,"results":"95","hashOfConfig":"50"},{"size":9036,"mtime":1608698227594,"results":"96","hashOfConfig":"50"},{"size":1831,"mtime":1608705928534,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1pbi381",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\git_workspace\\junior-blog\\src\\index.tsx",[],["207","208"],"D:\\git_workspace\\junior-blog\\src\\reportWebVitals.ts",[],"D:\\git_workspace\\junior-blog\\src\\App.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Hello\\index.tsx",[],["209","210"],"D:\\git_workspace\\junior-blog\\src\\components\\AnotherHello\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Header\\index.tsx",["211"],"import React, { useEffect, useState } from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport logo from \"../../image/Overwatch-big.png\";\r\nimport { UpSquareOutlined, DownSquareOutlined } from \"@ant-design/icons\";\r\nimport style from \"./index.module.less\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\n/**\r\n * 导航栏\r\n * props：暂无，由于内容较为固定，暂时 hard-code\r\n */\r\nfunction Header() {\r\n  // 控制当前header元素所在的高亮\r\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\r\n  // 控制header元素的显隐，用于移动端\r\n  const [headerVisible, setHeaderVisible] = useState<boolean>(false);\r\n\r\n  const HeaderPop = (\r\n    <div className={style[\"pop-content\"]}>\r\n      <span>欢迎来到我(守)的(望)空(先)间(锋)，冲鸭！！！</span>\r\n    </div>\r\n  );\r\n\r\n  const HeaderItem = () => {\r\n    //手机端的Header-item\r\n    return (\r\n      <div className={style[\"h-item\"]}>\r\n        <li\r\n          className={\r\n            currentIndex === 0\r\n              ? `${style[\"item-ph\"]} ${style[\"current-ph\"]}`\r\n              : style[\"item-ph\"]\r\n          }\r\n        >\r\n          <Link to=\"/\">技术博客</Link>\r\n        </li>\r\n        <li\r\n          className={\r\n            currentIndex === 1\r\n              ? `${style[\"item-ph\"]} ${style[\"current-ph\"]}`\r\n              : style[\"item-ph\"]\r\n          }\r\n        >\r\n          <Link to=\"/interact\">留言板</Link>\r\n        </li>\r\n        <li\r\n          className={\r\n            currentIndex === 2\r\n              ? `${style[\"item-ph\"]} ${style[\"current-ph\"]}`\r\n              : style[\"item-ph\"]\r\n          }\r\n        >\r\n          <Link to=\"/life\">历程</Link>\r\n        </li>\r\n        <li\r\n          className={\r\n            currentIndex === 3\r\n              ? `${style[\"item-ph\"]} ${style[\"current-ph\"]}`\r\n              : style[\"item-ph\"]\r\n          }\r\n        >\r\n          <Link to=\"/friendLink\">友链</Link>\r\n        </li>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const path = window.location.pathname.split(\"/\"); // 解析path\r\n    let index = currentIndex;\r\n    switch (path[1]) {\r\n      case \"\":\r\n        index = 0;\r\n        break;\r\n      case \"images\":\r\n        index = 1;\r\n        break;\r\n      case \"interact\":\r\n        index = 2;\r\n        break;\r\n      case \"about\":\r\n        index = 3;\r\n        break;\r\n    }\r\n    setCurrentIndex(index);\r\n  }, [window.location.pathname]);\r\n  return (\r\n    <div className={style.header}>\r\n      <div className={style.nav}>\r\n        <Popover placement=\"bottom\" content={HeaderPop} trigger=\"hover\">\r\n          <span className={`${style[\"header-title\"]} animated`}>\r\n            <img src={logo} alt=\"Junior_Lee\" />\r\n            <span className={style.text}>Junior_Lee个人博客</span>\r\n          </span>\r\n        </Popover>\r\n\r\n        <ul className={style[\"header-menu\"]}>\r\n          <li\r\n            className={\r\n              currentIndex === 0\r\n                ? `${style.item} animated ${style.current}`\r\n                : `${style.item} animated`\r\n            }\r\n          >\r\n            <Link to=\"/\">技术博客</Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              currentIndex === 1\r\n                ? `${style.item} animated ${style.current}`\r\n                : `${style.item} animated`\r\n            }\r\n          >\r\n            <Link to=\"/images\">图片</Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              currentIndex === 2\r\n                ? `${style.item} animated ${style.current}`\r\n                : `${style.item} animated`\r\n            }\r\n          >\r\n            <Link to=\"/interact\">留言板</Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              currentIndex === 3\r\n                ? `${style.item} animated ${style.current}`\r\n                : `${style.item} animated`\r\n            }\r\n          >\r\n            <Link to=\"/friendLink\">友链</Link>\r\n          </li>\r\n        </ul>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={HeaderItem}\r\n          trigger=\"hover\"\r\n          visible={headerVisible}\r\n          onVisibleChange={(visible: boolean) => setHeaderVisible(visible)}\r\n        >\r\n          <span\r\n            className={style[\"header-menu-ph\"]}\r\n            onClick={() => setHeaderVisible(!headerVisible)}\r\n          >\r\n            {headerVisible ? <UpSquareOutlined /> : <DownSquareOutlined />}\r\n          </span>\r\n        </Popover>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Loader\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Container\\index.tsx",["212"],"import React from \"react\";\r\nimport { Row, Col, Popover } from \"antd\";\r\nimport EveryDaySentence from \"../EveryDaySentence\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport style from \"./index.module.less\";\r\n\r\nconst Container: React.FC = (props) => {\r\n  const content = React.Children.map(props.children, (child) => child);\r\n  // const [main, ...aside] = content;\r\n\r\n  return (\r\n    <div className={style.center}>\r\n      <Helmet>\r\n        <title>博客 | Junior_Lee的个人博客</title>\r\n      </Helmet>\r\n\r\n      {/* <div className={style[\"everyday-sentence\"]}>\r\n        <Popover placement=\"bottom\" content={EveryDaySentence} trigger=\"hover\">\r\n          <span>\r\n            台阶是一层一层筑起的，目前的现实是未来理想的基础。 —— 徐特立\r\n          </span>\r\n        </Popover>\r\n      </div> */}\r\n      <EveryDaySentence />\r\n\r\n      <Row justify=\"space-between\">\r\n        <Col xs={24} sm={24} md={24} lg={17} xl={17} id=\"main-left\">\r\n          {content && content[0]}\r\n        </Col>\r\n        <Col xs={0} sm={0} md={0} lg={7} xl={7} id=\"main-right\">\r\n          {content && content[1]}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-article-introduction.tsx",["213","214"],"import React from \"react\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport {\r\n  FireFilled,\r\n  BorderlessTableOutlined,\r\n  LikeFilled,\r\n} from \"@ant-design/icons\";\r\nimport style from \"./introduction.module.less\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport img1 from \"../../image/intro1.jpg\";\r\n\r\nexport interface BlogArticleI {\r\n  id: number;\r\n  articleType: string;\r\n  sourceType: string;\r\n  title: string;\r\n  introduction: string;\r\n  viewCount: number;\r\n  assitCount: number;\r\n  introduceImage: string;\r\n  publishDate: string;\r\n}\r\n\r\ninterface BlogArticleProps {\r\n  data: BlogArticleI;\r\n}\r\n\r\nexport default function BlogArticleIntroduction(props: BlogArticleProps) {\r\n  const { data } = props;\r\n  return (\r\n    <LazyLoad height={400}>\r\n      <div className={`${style[\"blog-item\"]} animated rollIn`}>\r\n        <div className={style[\"blog-header\"]}>\r\n          <div className={style[\"blog-title-wrap\"]}>\r\n            <div className={style[\"blog-title\"]}>\r\n              <strong>{`【${data.sourceType}】`}</strong>\r\n              <Link to={`/blogdetail/article${data.id}`}>{data.title}</Link>\r\n              <div className={style[\"blog-icon-list\"]}>\r\n                <span className={style[\"blog-icon\"]}>\r\n                  <Link to={`/blog/tag/TODO`}>\r\n                    <BorderlessTableOutlined /> {data.articleType}\r\n                  </Link>\r\n                </span>\r\n                <span className={style[\"blog-icon\"]}>\r\n                  <Link to={`/blogdetail/article${data.id}`}>\r\n                    <FireFilled /> {data.viewCount}\r\n                  </Link>\r\n                </span>\r\n                <span className={style[\"blog-icon\"]}>\r\n                  <Link to={`/blogdetail/article${data.id}`}>\r\n                    <LikeFilled /> {data.assitCount}\r\n                  </Link>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className={style[\"blog-time\"]}>\r\n              <div className={style[\"blog-day\"]}>\r\n                <span className={style[\"blog-highlight\"]}>\r\n                  {data.publishDate.split(\"-\")[2]}\r\n                </span>\r\n                日\r\n              </div>\r\n              <div className={style[\"blog-else\"]}>\r\n                <span className={style[\"blog-highlight\"]}>\r\n                  {data.publishDate.split(\"-\")[0]}\r\n                </span>{\" \"}\r\n                年-\r\n                <span className={style[\"blog-highlight\"]}>\r\n                  {data.publishDate.split(\"-\")[1]}\r\n                </span>{\" \"}\r\n                月\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={style[\"blog-context\"]}>\r\n          <Row>\r\n            <Col\r\n              xs={24}\r\n              sm={24}\r\n              md={14}\r\n              lg={14}\r\n              xl={14}\r\n              className={style[\"text\"]}\r\n            >\r\n              <Link\r\n                to={`/blogdetail/article${data.id}`}\r\n                style={{ color: \"inherit\" }}\r\n              >\r\n                <div className={style[\"text-title\"]}>文章简介：</div>\r\n                <div className={style[\"text-context\"]}>{data.introduction}</div>\r\n                <div className={style[\"text-look\"]}>\r\n                  <Button\r\n                    type=\"link\"\r\n                    onClick={() =>\r\n                      // props.history.push(`/blogdetail/article${data.id}`)\r\n                      window.history.pushState(\r\n                        null,\r\n                        \"\",\r\n                        `/blogdetail/article${data.id}`\r\n                      )\r\n                    }\r\n                  >\r\n                    阅读全文\r\n                  </Button>\r\n                </div>\r\n              </Link>\r\n            </Col>\r\n            <Col\r\n              xs={24}\r\n              sm={24}\r\n              md={10}\r\n              lg={10}\r\n              xl={10}\r\n              className={style[\"img\"]}\r\n            >\r\n              <Link to={`/blogdetail/article${data.id}`}>\r\n                <img src={data.introduceImage} />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className={style[\"blog-footer\"]}>welcome to tap in</div>\r\n      </div>\r\n    </LazyLoad>\r\n  );\r\n}\r\n","D:\\git_workspace\\junior-blog\\src\\components\\LeeCard\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-detail.tsx",["215","216","217","218","219"],"D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\mockData.tsx",[],["220","221"],"D:\\git_workspace\\junior-blog\\src\\components\\CodeBlock\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\ArticleMenu\\index.tsx",["222"],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Login\\index.tsx",["223","224","225","226"],"import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Form, Input, Button, Checkbox, message } from \"antd\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport style from \"./index.module.less\";\r\nimport {\r\n  login,\r\n  checkLogin,\r\n  ILogin,\r\n  addBlogArticle,\r\n} from \"../../../api/service\";\r\nimport { useLocalStorage } from \"../../../utils/useLocalStorage\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n// import { withRouter } from \"react-router-dom\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 4, span: 20 },\r\n};\r\n\r\ninterface LoginData extends ILogin {\r\n  remember: boolean;\r\n}\r\n\r\nfunction Login(props: RouteComponentProps) {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [token, setToken, removeToken] = useLocalStorage(\"token\", null, {\r\n    raw: true,\r\n  });\r\n\r\n  const onFinish = (values: LoginData) => {\r\n    console.log(\"Success:\", values);\r\n    login({ username: values.username, password: values.password })\r\n      .then((res) => {\r\n        console.log(\"res in login\", res);\r\n        if (res.code === 200) {\r\n          message.success(\"登录成功\");\r\n          //是否记住token\r\n          setToken(res.token);\r\n\r\n          // window.location.replace(\"/admin\");\r\n          props.history.replace(\"/admin\");\r\n        } else {\r\n          message.error(res.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  // 验证是否已经登录，若已经登录则直接跳转至后台界面\r\n  useEffect(() => {\r\n    checkLogin().then((res) => {\r\n      if (res.code === 200) {\r\n        console.log(\"在登录界面。检测到已经登录\");\r\n        window.location.replace(\"/admin\");\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Loader loading={loading}>\r\n      <div className={style[\"form-container\"]}>\r\n        <Helmet>\r\n          <title>登录 | Junior_Lee的个人博客管理</title>\r\n        </Helmet>\r\n        <div className={style[\"title\"]}>Junior Lee博客后台管理登录</div>\r\n        <Form\r\n          {...layout}\r\n          form={form}\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"用户名\"\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please input your username!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"密码\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your password!\" }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              className={style[\"reset\"]}\r\n              htmlType=\"button\"\r\n              onClick={onReset}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Loader>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\git_workspace\\junior-blog\\src\\api\\service.ts",["227","228"],"D:\\git_workspace\\junior-blog\\src\\api\\index.ts",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\index.tsx",["229"],"import React, { useEffect, useState } from \"react\";\r\nimport style from \"./index.module.less\";\r\nimport { checkLogin } from \"../../../api/service\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport { Link, Route, Switch, withRouter } from \"react-router-dom\";\r\n\r\nimport { Layout, Menu, Breadcrumb, Button } from \"antd\";\r\nimport {\r\n  DesktopOutlined,\r\n  PieChartOutlined,\r\n  ToolOutlined,\r\n  FileImageOutlined,\r\n  BookOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport Index from \"./IndexPage\";\r\nimport AddArticle from \"./AddArticle\";\r\nimport ArticleList from \"../ArticleList\";\r\nimport DraftList from \"../DraftList\";\r\nimport ImageUpload from \"../ImageUpload\";\r\nimport Test from \"../../../components/EveryDaySentence/test\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nfunction Main() {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [collapsed, setCollapsed] = useState<boolean>(false);\r\n\r\n  const onCollapse = (collapsed: any) => {\r\n    console.log(collapsed);\r\n    setCollapsed(collapsed);\r\n    // this.setState({ collapsed });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"use Effect in Main\");\r\n    checkLogin().then((res) => {\r\n      res.code === 200 && setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Loader loading={loading}>\r\n      <Helmet>\r\n        <title>管理页 | Junior_Lee的个人博客</title>\r\n      </Helmet>\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Sider\r\n          className={style[\"side\"]}\r\n          collapsible\r\n          collapsed={collapsed}\r\n          onCollapse={onCollapse}\r\n        >\r\n          <div className=\"logo\" />\r\n          <Menu\r\n            className={style[\"side-menu\"]}\r\n            theme=\"dark\"\r\n            defaultSelectedKeys={[\"1\"]}\r\n            mode=\"inline\"\r\n          >\r\n            <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n              <Link to=\"/admin/\">工作台</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\r\n              Option 2\r\n            </Menu.Item>\r\n            <SubMenu key=\"sub1\" icon={<BookOutlined />} title=\"文章\">\r\n              <Menu.Item key=\"3\">\r\n                <Link to=\"/admin/articleList\">文章列表</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"4\">\r\n                <Link to=\"/admin/addArticle\">添加文章</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"5\">\r\n                <Link to=\"/admin/draftList\">草稿列表</Link>\r\n              </Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu key=\"sub2\" icon={<FileImageOutlined />} title=\"图片\">\r\n              <Menu.Item key=\"6\">\r\n                <Link to=\"/admin/uploadImage\">上传图片</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"8\">Team 2</Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item key=\"9\" icon={<ToolOutlined />}>\r\n              待定功能\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Header className={style[\"header\"]} style={{ padding: 0 }}>\r\n            <Breadcrumb style={{ margin: \"16px\" }}>\r\n              <Breadcrumb.Item>User</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <span>Junior_Lee博客后台管理</span>\r\n            <Button className={style[\"exit\"]} type=\"link\">\r\n              退出登录\r\n            </Button>\r\n          </Header>\r\n          <Content style={{ margin: \"0 16px\" }}>\r\n            <div\r\n              style={{\r\n                padding: \"16px 24px\",\r\n                minHeight: \"360px\",\r\n                minWidth: \"1000px\",\r\n              }}\r\n            >\r\n              <Route path=\"/admin\" exact component={Index}></Route>\r\n              <Route\r\n                path=\"/admin/addArticle\"\r\n                exact\r\n                component={AddArticle}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/addArticle/:id\"\r\n                exact\r\n                component={AddArticle}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/articleList\"\r\n                exact\r\n                component={ArticleList}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/draftList\"\r\n                exact\r\n                component={DraftList}\r\n              ></Route>\r\n              <Route\r\n                path=\"/admin/uploadImage\"\r\n                exact\r\n                component={ImageUpload}\r\n              ></Route>\r\n              <Route path=\"/admin/test\" exact component={Test}></Route>\r\n            </div>\r\n          </Content>\r\n          <Footer className={style[\"footer\"]}>\r\n            Ant Design ©2018 Created by Ant UED\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Loader>\r\n  );\r\n}\r\n\r\nexport default withRouter(Main);\r\n","D:\\git_workspace\\junior-blog\\src\\utils\\useLocalStorage.ts",["230"],"import { useState, useCallback, Dispatch, SetStateAction } from \"react\";\r\n\r\nconst isClient = typeof window === \"object\";\r\n\r\ntype parserOptions<T> =\r\n  | {\r\n      raw: true;\r\n    }\r\n  | {\r\n      raw: false;\r\n      serializer: (value: T) => string;\r\n      deserializer: (value: string) => T;\r\n    };\r\n\r\nconst noop = () => {};\r\n\r\nexport const useLocalStorage = <T>(\r\n  key: string,\r\n  initialValue?: T,\r\n  options?: parserOptions<T>\r\n): [T | undefined, Dispatch<SetStateAction<T | undefined>>, () => void] => {\r\n  if (!isClient) {\r\n    return [initialValue as T, noop, noop];\r\n  }\r\n  if (!key) {\r\n    throw new Error(\"useLocalStorage key may not be falsy\");\r\n  }\r\n\r\n  const deserializer = options\r\n    ? options.raw\r\n      ? (value: any) => value\r\n      : options.deserializer\r\n    : JSON.parse;\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [state, setState] = useState<T | undefined>(() => {\r\n    try {\r\n      const serializer = options\r\n        ? options.raw\r\n          ? String\r\n          : options.serializer\r\n        : JSON.stringify;\r\n\r\n      const localStorageValue = localStorage.getItem(key);\r\n      if (localStorageValue !== null) {\r\n        return deserializer(localStorageValue);\r\n      } else {\r\n        initialValue && localStorage.setItem(key, serializer(initialValue));\r\n        return initialValue;\r\n      }\r\n    } catch {\r\n      // If user is in private mode or has storage restriction\r\n      // localStorage can throw. JSON.parse and JSON.stringify\r\n      // can throw, too.\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const set: Dispatch<SetStateAction<T | undefined>> = useCallback(\r\n    (valOrFunc) => {\r\n      try {\r\n        const newState =\r\n          typeof valOrFunc === \"function\"\r\n            ? (valOrFunc as Function)(state)\r\n            : valOrFunc;\r\n        if (typeof newState === \"undefined\") return;\r\n        let value: string;\r\n\r\n        if (options)\r\n          if (options.raw)\r\n            if (typeof newState === \"string\") value = newState;\r\n            else value = JSON.stringify(newState);\r\n          else if (options.serializer) value = options.serializer(newState);\r\n          else value = JSON.stringify(newState);\r\n        else value = JSON.stringify(newState);\r\n\r\n        localStorage.setItem(key, value);\r\n        setState(deserializer(value));\r\n      } catch {\r\n        // If user is in private mode or has storage restriction\r\n        // localStorage can throw. Also JSON.stringify can throw.\r\n      }\r\n    },\r\n    [key, setState]\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const remove = useCallback(() => {\r\n    try {\r\n      localStorage.removeItem(key);\r\n      setState(undefined);\r\n    } catch {\r\n      // If user is in private mode or has storage restriction\r\n      // localStorage can throw.\r\n    }\r\n  }, [key, setState]);\r\n\r\n  return [state, set, remove];\r\n};\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\AddArticle\\index.tsx",["231","232","233"],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\IndexPage\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\index.tsx",["234"],"import {\r\n  CalendarFilled,\r\n  HeartFilled,\r\n  EyeFilled,\r\n  EyeInvisibleFilled,\r\n} from \"@ant-design/icons\";\r\nimport { Button, message, Popover } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport style from \"./index.module.less\";\r\n\r\ninterface EveryDaySentenceI {\r\n  content: string;\r\n  note: string;\r\n  pic: string;\r\n  date: string;\r\n  love: number;\r\n}\r\n\r\nexport default function EveryDaySentence() {\r\n  const [data, setData] = useState<EveryDaySentenceI | null>(null);\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n  const [defaultText, setDefaultText] = useState<string>(\"loading...\");\r\n\r\n  useEffect(() => {\r\n    $.ajax({\r\n      url: \"http://open.iciba.com/dsapi\",\r\n      dataType: \"jsonp\", //加上这行代码即可\r\n      success: function (result) {\r\n        console.log(result, typeof result);\r\n        try {\r\n          const res = {\r\n            content: result.content,\r\n            note: result.note,\r\n            pic: result.picture2,\r\n            date: result.dateline,\r\n            love: result.love,\r\n          };\r\n          setData(res);\r\n        } catch {\r\n          // message.error(\"每日一句服务获取出错\");\r\n          setDefaultText(\r\n            \"台阶是一层一层筑起的，目前的现实是未来理想的基础。 —— 徐特立\"\r\n          );\r\n        }\r\n      },\r\n    }).catch((error) => {\r\n      console.log(error);\r\n      // message.error(\"每日一句服务获取出错\");\r\n      setDefaultText(\r\n        \"台阶是一层一层筑起的，目前的现实是未来理想的基础。 —— 徐特立\"\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  const cardNode = (\r\n    <div className={style[\"card\"]}>\r\n      <div className={style[\"header\"]}>\r\n        <div className={style[\"left-side\"]}>\r\n          <span className={style[\"title\"]}>每日一句</span>\r\n          <div className={style[\"date\"]}>\r\n            <CalendarFilled />\r\n            <span>{data?.date}</span>\r\n          </div>\r\n          <div className={style[\"love\"]}>\r\n            <HeartFilled />\r\n            <span>{data?.love}</span>\r\n          </div>\r\n        </div>\r\n        <img className={style[\"banner\"]} src={data?.pic} alt=\"\" />\r\n      </div>\r\n      <div className={style[\"content\"]}>{data?.content}</div>\r\n      <div className={`${style[\"note\"]} ${!visible ? style[\"hide\"] : \"\"}`}>\r\n        {data?.note}\r\n      </div>\r\n      <div className={style[\"btn\"]}>\r\n        <Button\r\n          type=\"default\"\r\n          icon={visible ? <EyeInvisibleFilled /> : <EyeFilled />}\r\n          onClick={() => {\r\n            console.log(\"click\");\r\n            setVisible(!visible);\r\n          }}\r\n        >\r\n          {visible ? \"隐藏译文\" : \"显示译文\"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={style[\"everyday-sentence\"]}>\r\n      <div style={{ display: \"inline-block\" }} id=\"everyday-sentence\">\r\n        {data ? (\r\n          <Popover\r\n            placement=\"bottom\"\r\n            content={cardNode}\r\n            trigger=\"hover\"\r\n            autoAdjustOverflow={true}\r\n            getPopupContainer={() =>\r\n              document.getElementById(\"everyday-sentence\") as HTMLElement\r\n            }\r\n          >\r\n            <span className=\"animated\">{data.content}</span>\r\n          </Popover>\r\n        ) : (\r\n          <span className=\"animated\">{defaultText}</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//  EveryDaySentence;\r\n","D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\test.tsx",["235","236"],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\ImageUpload\\index.tsx",["237","238"],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\ArticleList\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\const\\index.ts",[],"D:\\git_workspace\\junior-blog\\src\\components\\Tocify\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\DraftList\\index.tsx",["239"],"import React, { useEffect, useState } from \"react\";\r\nimport { Spin, Table, message, Button, Modal } from \"antd\";\r\nimport {\r\n  getBlogArticleList,\r\n  BlogArticleListI,\r\n  deleteBlogArticleById,\r\n  getBlogDraftList,\r\n} from \"../../../api/service\";\r\nimport { ArticleType, ArticleSourceType } from \"../../../const\";\r\nimport style from \"./index.module.less\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nconst { confirm } = Modal;\r\n\r\ninterface ArticleListI {\r\n  articleId: number; // 0; // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n  // oldarticleTitle: \"\"; //以前的标题(保存后在数据库依照此标题修改)\r\n  articleTitle: string; // \"\"; //文章标题\r\n  publishDate: string; // \"\"; //发布日期\r\n  updateDate: string; // \"\"; //修改日志的日期(未使用)\r\n  // typeInfo: []; // 文章类别信息(未使用)\r\n  selectedType: number | string; //选择的文章类别\r\n  sourceType: number | string; // \"\"; //文章来源  原创 || 转载\r\n}\r\n\r\nfunction DraftList(props: RouteComponentProps) {\r\n  const [data, setData] = useState<ArticleListI[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  // 删除之后自增用于重渲染\r\n  const [counter, setCounter] = useState<number>(0);\r\n  const columns = [\r\n    {\r\n      title: \"标题\",\r\n      render: (item: ArticleListI) => (\r\n        <a\r\n          href={`/blogdetail/article${item.articleId}`}\r\n          style={{ color: \"#47ACFF\" }}\r\n        >\r\n          {item.articleTitle}\r\n        </a>\r\n      ),\r\n    },\r\n    {\r\n      title: \"类别\",\r\n      dataIndex: \"selectedType\",\r\n      render: (type: number) => ArticleType[type],\r\n    },\r\n    {\r\n      title: \"来源\",\r\n      dataIndex: \"sourceType\",\r\n      render: (type: number) => ArticleSourceType[type],\r\n    },\r\n    {\r\n      title: \"发布时间\",\r\n      dataIndex: \"publishDate\",\r\n    },\r\n    {\r\n      title: \"浏览量\",\r\n      dataIndex: \"viewCount\",\r\n    },\r\n    {\r\n      title: \"点赞数\",\r\n      dataIndex: \"assitCount\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      render: (item: ArticleListI) => {\r\n        return (\r\n          <div>\r\n            <Button\r\n              className={style[\"operation-btn\"]}\r\n              type=\"link\"\r\n              onClick={() => {\r\n                updateArticle(item.articleId);\r\n              }}\r\n            >\r\n              修改\r\n            </Button>\r\n            <Button\r\n              className={style[\"operation-btn\"]}\r\n              danger\r\n              type=\"text\"\r\n              onClick={() => {\r\n                deleteArticle(item.articleId, item.articleTitle);\r\n              }}\r\n            >\r\n              删除\r\n            </Button>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const updateArticle = (articleId: number) => {\r\n    props.history.push(\"/admin/addArticle/\" + articleId);\r\n  };\r\n\r\n  const deleteArticle = (articleId: number, articleTitle: string) => {\r\n    confirm({\r\n      title: \"确定要删除这篇博客文章吗？\",\r\n      content: `你要删除的文章标题为《${articleTitle}》如果你点击OK按钮，文章将从数据库删除，无法恢复，冲动是魔鬼！`,\r\n      onOk() {\r\n        setLoading(true);\r\n        deleteBlogArticleById(articleId)\r\n          .then((res) => {\r\n            if (res.code === 200) {\r\n              message.success(res.message);\r\n              setCounter((counter) => counter + 1);\r\n            } else {\r\n            }\r\n            setLoading(false);\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false);\r\n            message.error(\"不好意思，服务器出错了\");\r\n            console.log(error);\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  const onChange = (selectedRowKeys: any, selectedRows: any) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      \"selectedRows: \",\r\n      selectedRows\r\n    );\r\n  };\r\n\r\n  // 获取列表\r\n  useEffect(() => {\r\n    getBlogDraftList()\r\n      .then((res) => {\r\n        if (res.code === 200) {\r\n          console.log(res);\r\n          const filterData = [...res.data].map((item: BlogArticleListI) => ({\r\n            articleId: item.id,\r\n            articleTitle: item.article_title,\r\n            selectedType: item.article_type,\r\n            sourceType: item.article_source_type,\r\n            publishDate: item.publish_date,\r\n            updateDate: item.update_date,\r\n            viewCount: item.view_count,\r\n            assitCount: item.assit_count,\r\n          }));\r\n          console.log(filterData);\r\n          setData(filterData);\r\n        } else {\r\n          message.error(res.message);\r\n        }\r\n\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        message.error(error);\r\n      });\r\n  }, [counter]);\r\n  return (\r\n    <div>\r\n      <Spin spinning={loading}>\r\n        <Table\r\n          rowKey={(record) => record.articleId}\r\n          columns={columns}\r\n          dataSource={data}\r\n          rowSelection={{ type: \"checkbox\", onChange }}\r\n        />\r\n      </Spin>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftList;\r\n","D:\\git_workspace\\junior-blog\\src\\components\\imperative-dialog\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\cssMixin.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar.tsx",["240"],"import React, { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\n\nimport {\n    LeftOutlined,\n    RightOutlined,\n    ZoomInOutlined,\n    CloseOutlined,\n    ZoomOutOutlined,\n    OneToOneOutlined,\n    ExpandOutlined,\n    RotateLeftOutlined,\n} from '@ant-design/icons';\nimport classNames from 'classnames';\nimport ImageViewerToolbarButton from './toolbar/button';\nimport ImageViewerToolbarDivider from './toolbar/divider';\n\nconst useStyles = createUseStyles({\n    toolbar: {\n        background: 'rgba(0, 0, 0, 0.75)',\n        padding: [0, 12],\n        cursor: 'default',\n        border: 'none',\n        borderRadius: 4,\n\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        boxShadow: [0, 6, 24, 0, 'rgba(31,35,41,.1)'],\n\n        height: 48,\n        width: 'auto',\n\n        color: 'white',\n    },\n    pageNum: {\n        minWidth: 46,\n        textAlign: 'center',\n    },\n    ratio: {\n        width: 48,\n        textAlign: 'center',\n    },\n});\n\nexport type ToolbarEvent = 'prev' | 'next' | 'zoomin' | 'zoomout' | 'original' | 'fitscreen' | 'rotate';\n\ninterface ImageViewerToolbarProps\n    extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement> {\n    onEvent(event: ToolbarEvent): void;\n    current: number;\n    total: number;\n    zoomLevel: number;\n}\n\nexport default function ImageViewerToolbar(props: ImageViewerToolbarProps) {\n    const classes = useStyles();\n    const { onEvent, current, total, zoomLevel, className, ...containerProps } = props;\n    const [toggle, setToggle] = useState(false);\n\n    return (\n        <ul className={classNames(classes.toolbar, className)} {...containerProps}>\n            <ImageViewerToolbarButton\n                disabled={current === 1}\n                onClick={() => onEvent('prev')}\n                tooltip=\"上一张\"\n                icon={<LeftOutlined />}\n            />\n            <span className={classes.pageNum}>\n                {current}/{total}\n            </span>\n            <ImageViewerToolbarButton\n                disabled={current === total}\n                onClick={() => onEvent('next')}\n                tooltip=\"下一张\"\n                icon={<RightOutlined />}\n            />\n            <ImageViewerToolbarDivider />\n            <ImageViewerToolbarButton onClick={() => onEvent('zoomin')} tooltip=\"放大\" icon={<ZoomInOutlined />} />\n            <span className={classes.ratio}>{Math.floor(zoomLevel * 100)}%</span>\n            <ImageViewerToolbarButton onClick={() => onEvent('zoomout')} tooltip=\"缩小\" icon={<ZoomOutOutlined />} />\n            {!toggle ? (\n                <ImageViewerToolbarButton\n                    onClick={() => {\n                        onEvent('original');\n                        setToggle((toggle) => !toggle);\n                    }}\n                    tooltip=\"原始尺寸\"\n                    icon={<OneToOneOutlined />}\n                />\n            ) : (\n                <ImageViewerToolbarButton\n                    onClick={() => {\n                        onEvent('fitscreen');\n                        setToggle((toggle) => !toggle);\n                    }}\n                    tooltip=\"适应屏幕\"\n                    icon={<ExpandOutlined />}\n                />\n            )}\n            <ImageViewerToolbarDivider />\n            <ImageViewerToolbarButton onClick={() => onEvent('rotate')} tooltip=\"旋转\" icon={<RotateLeftOutlined />} />\n        </ul>\n    );\n}\n","D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\close.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\hooks.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\click.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\button.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\image-viewer\\toolbar\\divider.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\plain-modal\\styles.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Interact\\index.tsx",["241","242","243","244"],"import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Input, Form, Button, Switch, message, Divider } from \"antd\";\r\nimport { MailOutlined } from \"@ant-design/icons\";\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport Loader from \"../../components/Loader\";\r\nimport LeeCard from \"../../components/LeeCard\";\r\nimport QQCard from \"../../components/QQCard\";\r\nimport WechatCard from \"../../components/WechatCard\";\r\nimport Reply from \"../../components/Reply\";\r\nimport style from \"./index.module.less\";\r\nimport defaultHeadImg from \"../../image/defaultImg.jpg\";\r\nimport genji from \"../../image/genji.png\";\r\nimport moment from \"moment\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport {\r\n  addInteract,\r\n  AddInteractI,\r\n  getInteract,\r\n  addInteractReply,\r\n  AddInteractReplyI,\r\n  checkLogin,\r\n} from \"../../api/service\";\r\n\r\ninterface ReplyI {\r\n  isReply: boolean;\r\n  replyItem: ReplyItem | null;\r\n}\r\n\r\ninterface ReplyItem {\r\n  id: number;\r\n  name: string;\r\n  context: string;\r\n  email: string;\r\n  is_master: number;\r\n}\r\n\r\ninterface InteractDataI {\r\n  id: number;\r\n  name: string;\r\n  context: string;\r\n  can_reply: number;\r\n  is_master: number;\r\n  email: string;\r\n  create_time: number;\r\n  children: InteractDataChildrenI[];\r\n}\r\n\r\ninterface InteractDataChildrenI {\r\n  id: number;\r\n  name: string;\r\n  context: string;\r\n  email: string;\r\n  is_master: number;\r\n  can_reply: number;\r\n  create_time: number;\r\n  fid: number;\r\n  fname: string;\r\n  femail: string;\r\n  fis_master: number;\r\n}\r\n\r\nfunction Interact() {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [reply, setReply] = useState<ReplyI | null>({\r\n    isReply: false,\r\n    replyItem: {\r\n      id: 0,\r\n      is_master: 1,\r\n      context: \"hello\",\r\n      name: \"\",\r\n      email: \"\",\r\n    },\r\n  });\r\n  // 添加完邮箱后显示QQ头像\r\n  const [headImg, setHeadImg] = useState<string>(\"\");\r\n  const [singleReply, setSingleReply] = useState<boolean>(false);\r\n  const [interactData, setInteractData] = useState<InteractDataI[]>([]);\r\n  const [counter, setCounter] = useState<number>(0); // 用于提交之后重渲染\r\n  const [form] = Form.useForm();\r\n\r\n  //   console.log(\"interactData.length\", interactData.length, interactData);\r\n\r\n  const addRow = () => {\r\n    // console.log(\"finish\");\r\n    setLoading(true);\r\n\r\n    // 验证邮箱格式\r\n    const emailValue = form.getFieldValue(\"email\").trim();\r\n    if (!/^[\\w\\-]+@qq\\.com$/i.test(emailValue)) {\r\n      message.error(\"QQ邮箱格式不正确\");\r\n      setTimeout(() => setLoading(false), 2000);\r\n      return;\r\n    }\r\n\r\n    const name = form.getFieldValue(\"name\");\r\n    const context = form.getFieldValue(\"context\");\r\n    const create_time = new Date().getTime() / 1000;\r\n    // console.log(name, context, create_time);\r\n\r\n    if (!reply?.isReply) {\r\n      // 添加留言\r\n      setLoading(true);\r\n      const data: AddInteractI = {\r\n        name,\r\n        context,\r\n        can_reply: !singleReply ? 1 : 0,\r\n        is_master: 0,\r\n        email: emailValue,\r\n        create_time,\r\n      };\r\n      addInteract(data)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          setCounter((counter) => counter + 1);\r\n          message.success(res.message);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          message.error(\"不好意思，服务器出错了\");\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      // 添加回复\r\n      setLoading(true);\r\n      const data: AddInteractReplyI = {\r\n        name,\r\n        context,\r\n        can_reply: !singleReply ? 1 : 0,\r\n        is_master: 0,\r\n        email: emailValue,\r\n        create_time,\r\n        fid: reply.replyItem?.id as number,\r\n        fname: reply.replyItem?.name as string,\r\n        femail: reply.replyItem?.email as string,\r\n        fis_master: reply.replyItem?.is_master as number,\r\n      };\r\n\r\n      addInteractReply(data)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          setCounter((counter) => counter + 1);\r\n          message.success(res.message);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          message.error(\"不好意思，服务器出错了\");\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleMail = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = ev.target.value.trim();\r\n    if (value === \"\" || !/^[\\w\\-]+@qq\\.com$/i.test(value)) {\r\n      setHeadImg(\"\");\r\n      return;\r\n    } else setHeadImg(`http://q4.qlogo.cn/g?b=qq&nk=${value}&s=3`);\r\n  };\r\n\r\n  const handleReply = (fitem: InteractDataI, citem?: InteractDataChildrenI) => {\r\n    const data = { ...fitem };\r\n    if (citem) {\r\n      // 说明是对回复的回复，将属性进行覆盖\r\n      data.name = citem.name;\r\n      data.context = citem.context;\r\n      data.email = citem.email;\r\n      data.is_master = citem.is_master;\r\n    }\r\n    setReply({ replyItem: data, isReply: true });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setReply({ replyItem: null, isReply: false });\r\n  };\r\n\r\n  const masterReply = (fitem: InteractDataI, citem?: InteractDataChildrenI) => {\r\n    checkLogin()\r\n      .then((res) => {\r\n        if (res.code === 200) {\r\n          const data = { ...fitem };\r\n          if (citem) {\r\n            // 说明是对回复的回复，将属性进行覆盖\r\n            data.name = citem.name;\r\n            data.context = citem.context;\r\n            data.email = citem.email;\r\n            data.is_master = citem.is_master;\r\n          }\r\n          setReply({ replyItem: data, isReply: true });\r\n        } else {\r\n          message.info(\"不好意思，这位朋友设置了仅博主回复\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error in checkLogin in Interact.masterReply()\", error);\r\n      });\r\n  };\r\n\r\n  // 获取留言\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getInteract()\r\n      .then((res) => {\r\n        console.log(\"getInteract\", res);\r\n        setInteractData(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"不好意思，服务器出错了\");\r\n        console.log(error);\r\n        setLoading(false);\r\n      });\r\n  }, [counter]);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Container>\r\n        <div className={style[\"interact-wrap\"]}>\r\n          <div className={style[\"interact-title\"]}>\r\n            <div className={style[\"interact-title-header\"]}>\r\n              Junior_Lee 的留言板\r\n            </div>\r\n            <div className={style[\"interact-title-context-wrap\"]}>\r\n              <div className={style[\"interact-title-context\"]}>\r\n                <div className={style[\"context-line\"]}>\r\n                  If I should meet thee\r\n                </div>\r\n                <div className={style[\"context-line\"]}>After long years,</div>\r\n                <div className={style[\"context-line\"]}>\r\n                  How should I greet thee?\r\n                </div>\r\n                <div className={style[\"context-line\"]}>\r\n                  With silence and tears.\r\n                </div>\r\n                <br />\r\n                <div className={style[\"context-line\"]}>若我在见到你，</div>\r\n                <div className={style[\"context-line\"]}>事搁经年，</div>\r\n                <div className={style[\"context-line\"]}>我该如何贺你？</div>\r\n                <div className={style[\"context-line\"]}>以沉默，以眼泪。</div>\r\n                <div className={style[\"context-author\"]}>——拜伦</div>\r\n              </div>\r\n              <img src={genji} alt=\"\" className={style[\"poster\"]} />\r\n            </div>\r\n          </div>\r\n          <div id=\"reply-holder\"></div>\r\n          <div className={style[\"interact-edit-wrap\"]}>\r\n            <div className={style[\"interact-edit-header\"]}>留个言吧~</div>\r\n            {reply?.isReply ? (\r\n              <div className={style[\"interact-reply\"]}>\r\n                <div className={style[\"reply-item\"]}>\r\n                  回复{\" \"}\r\n                  {reply?.replyItem?.is_master ? (\r\n                    <span className={style[\"master\"]}>博主</span>\r\n                  ) : (\r\n                    reply?.replyItem?.name\r\n                  )}{\" \"}\r\n                  的一条留言：\r\n                </div>\r\n                <div className={style[\"reply-item\"]}>\r\n                  {reply?.replyItem?.context}\r\n                </div>\r\n                <div className={style[\"reply-item\"]}>\r\n                  <a onClick={handleCancel}>取消回复</a>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n\r\n            <Form\r\n              layout=\"horizontal\"\r\n              requiredMark={false}\r\n              form={form}\r\n              onFinish={addRow}\r\n            >\r\n              <Row justify=\"space-between\" style={{ marginBottom: \"5px\" }}>\r\n                <Col xs={20} sm={20} md={20} lg={20} xl={21}>\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: \"留个ID好分辨？\" }]}\r\n                  >\r\n                    <Input\r\n                      className={style[\"interact-inputarea\"]}\r\n                      placeholder=\"留个ID日后好相认？\"\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={4} sm={3} md={4} lg={4} xl={3}>\r\n                  {\" \"}\r\n                  {headImg == \"\" ? (\r\n                    <img\r\n                      src={defaultHeadImg}\r\n                      className={style[\"interact-headImg\"]}\r\n                      alt=\"\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={headImg}\r\n                      className={style[\"interact-headImg\"]}\r\n                      alt=\"\"\r\n                    />\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n              <Form.Item\r\n                name=\"context\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"这也不能留个寂寞啊，来个战网ID好友位也行啊\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.TextArea\r\n                  rows={6}\r\n                  className={style[\"interact-inputarea\"]}\r\n                  placeholder=\"旁友，来个战网ID好友位也行啊\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Row\r\n                className={style[\"interact-edit-subline\"]}\r\n                justify=\"space-between\"\r\n              >\r\n                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                  <Row>\r\n                    <Col xs={2} sm={2} md={2} lg={2} xl={2}>\r\n                      <MailOutlined className={style[\"email\"]} />\r\n                    </Col>\r\n                    <Col xs={20} sm={20} md={20} lg={20} xl={20}>\r\n                      <Form.Item\r\n                        name=\"email\"\r\n                        rules={[\r\n                          { required: true, message: \"旁友，你的邮箱还没留呐\" },\r\n                        ]}\r\n                      >\r\n                        <Input\r\n                          className={style[\"email-input\"]}\r\n                          placeholder=\"你的QQ邮箱~\"\r\n                          onChange={handleMail}\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n                  <Row justify=\"end\">\r\n                    <Col style={{ marginRight: \"15px\" }}>\r\n                      <span className={style[\"canreply\"]}>\r\n                        是否仅博主回复：\r\n                      </span>\r\n                      <Form.Item name=\"canreply\" noStyle={true}>\r\n                        <Switch\r\n                          checked={singleReply}\r\n                          checkedChildren=\"开\"\r\n                          unCheckedChildren=\"关\"\r\n                          onChange={(checked: boolean) =>\r\n                            setSingleReply(checked)\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        className={style[\"interact-submit\"]}\r\n                        htmlType=\"submit\"\r\n                        //   onClick={() => .submit()}\r\n                      >\r\n                        留言\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n          <div className={style[\"interact-list\"]}>\r\n            <div className={`${style[\"interact-list-header\"]}`}>留言列表</div>\r\n            {interactData.length > 0 ? (\r\n              <Loader loading={loading}>\r\n                {interactData.map((fitem: InteractDataI, index: number) => (\r\n                  <LazyLoad\r\n                    height={300}\r\n                    classNamePrefix=\"animated fadeInRight\"\r\n                    key={index}\r\n                  >\r\n                    <div className={style[\"interact-list-context\"]}>\r\n                      <Reply\r\n                        name={fitem.name}\r\n                        author={\r\n                          fitem.is_master ? (\r\n                            <span className={style[\"master\"]}>博主</span>\r\n                          ) : (\r\n                            fitem.name\r\n                          )\r\n                        }\r\n                        context={fitem.context}\r\n                        headImg={`http://q4.qlogo.cn/g?b=qq&nk=${fitem.email}&s=3`}\r\n                        reply={\r\n                          <span>\r\n                            {moment(new Date(fitem.create_time * 1000)).format(\r\n                              \"YYYY年MM月DD日 HH:mm:ss\"\r\n                            )}\r\n                            {fitem.can_reply ? (\r\n                              <a\r\n                                href=\"#reply-holder\"\r\n                                style={{ marginLeft: \"10px\" }}\r\n                                onClick={() => handleReply(fitem)}\r\n                              >\r\n                                回复\r\n                              </a>\r\n                            ) : (\r\n                              <span\r\n                                style={{ marginLeft: \"10px\" }}\r\n                                onClick={() => masterReply(fitem)}\r\n                              >\r\n                                这位朋友设置了仅博主回复\r\n                              </span>\r\n                            )}{\" \"}\r\n                          </span>\r\n                        }\r\n                      >\r\n                        {fitem.children.map(\r\n                          (citem: InteractDataChildrenI, index: number) => (\r\n                            <Reply\r\n                              key={index}\r\n                              name={citem.name}\r\n                              author={\r\n                                <span>\r\n                                  {citem.is_master ? (\r\n                                    <span className={style[\"master\"]}>\r\n                                      博主\r\n                                    </span>\r\n                                  ) : (\r\n                                    citem.name\r\n                                  )}{\" \"}\r\n                                  回复{\" \"}\r\n                                  {citem.fis_master ? (\r\n                                    <span className={style[\"master\"]}>\r\n                                      博主\r\n                                    </span>\r\n                                  ) : (\r\n                                    citem.fname\r\n                                  )}{\" \"}\r\n                                  ：\r\n                                </span>\r\n                              }\r\n                              context={citem.context}\r\n                              headImg={`http://q4.qlogo.cn/g?b=qq&nk=${citem.email}&s=3`}\r\n                              reply={\r\n                                <span>\r\n                                  {moment(\r\n                                    new Date(citem.create_time * 1000)\r\n                                  ).format(\"YYYY年MM月DD日 HH:mm:ss\")}\r\n                                  {citem.can_reply ? (\r\n                                    <a\r\n                                      href=\"#reply-a\"\r\n                                      style={{ marginLeft: \"10px\" }}\r\n                                      onClick={() => handleReply(fitem, citem)}\r\n                                    >\r\n                                      回复\r\n                                    </a>\r\n                                  ) : (\r\n                                    <span\r\n                                      style={{ marginLeft: \"10px\" }}\r\n                                      onClick={() => masterReply(fitem, citem)}\r\n                                    >\r\n                                      这位朋友设置了仅博主回复\r\n                                    </span>\r\n                                  )}{\" \"}\r\n                                </span>\r\n                              }\r\n                            ></Reply>\r\n                          )\r\n                        )}\r\n                      </Reply>\r\n                    </div>\r\n                  </LazyLoad>\r\n                ))}\r\n              </Loader>\r\n            ) : (\r\n              <div className={style[\"no-reply\"]}>暂时还没有留言噢~</div>\r\n            )}\r\n          </div>\r\n          <Divider dashed className={style[\"ending\"]}>\r\n            已经到底了\r\n          </Divider>\r\n        </div>\r\n\r\n        <>\r\n          <LeeCard />\r\n          <WechatCard />\r\n          <QQCard />\r\n        </>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Interact;\r\n","D:\\git_workspace\\junior-blog\\src\\components\\Reply\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\QQCard\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\WechatCard\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Images\\index.tsx",["245"],"D:\\git_workspace\\junior-blog\\src\\pages\\Pictures\\index.js",["246","247","248","249"],"D:\\git_workspace\\junior-blog\\src\\components\\Images\\index.tsx",["250","251","252","253"],"D:\\git_workspace\\junior-blog\\src\\components\\ArticleTag\\index.tsx",["254"],{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"255","replacedBy":"259"},{"ruleId":"257","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":86,"column":6,"nodeType":"263","endLine":86,"endColumn":32,"suggestions":"264"},{"ruleId":"265","severity":1,"message":"266","line":2,"column":20,"nodeType":"267","messageId":"268","endLine":2,"endColumn":27},{"ruleId":"265","severity":1,"message":"269","line":12,"column":8,"nodeType":"267","messageId":"268","endLine":12,"endColumn":12},{"ruleId":"270","severity":1,"message":"271","line":120,"column":17,"nodeType":"272","endLine":120,"endColumn":50},{"ruleId":"265","severity":1,"message":"273","line":6,"column":8,"nodeType":"267","messageId":"268","endLine":6,"endColumn":19},{"ruleId":"265","severity":1,"message":"274","line":18,"column":22,"nodeType":"267","messageId":"268","endLine":18,"endColumn":26},{"ruleId":"265","severity":1,"message":"275","line":28,"column":3,"nodeType":"267","messageId":"268","endLine":28,"endColumn":11},{"ruleId":"261","severity":1,"message":"276","line":138,"column":6,"nodeType":"263","endLine":138,"endColumn":8,"suggestions":"277"},{"ruleId":"261","severity":1,"message":"278","line":162,"column":6,"nodeType":"263","endLine":162,"endColumn":17,"suggestions":"279"},{"ruleId":"255","replacedBy":"280"},{"ruleId":"257","replacedBy":"281"},{"ruleId":"265","severity":1,"message":"282","line":33,"column":11,"nodeType":"267","messageId":"268","endLine":33,"endColumn":17},{"ruleId":"265","severity":1,"message":"283","line":3,"column":31,"nodeType":"267","messageId":"268","endLine":3,"endColumn":39},{"ruleId":"265","severity":1,"message":"284","line":10,"column":3,"nodeType":"267","messageId":"268","endLine":10,"endColumn":17},{"ruleId":"265","severity":1,"message":"285","line":31,"column":10,"nodeType":"267","messageId":"268","endLine":31,"endColumn":15},{"ruleId":"265","severity":1,"message":"286","line":31,"column":27,"nodeType":"267","messageId":"268","endLine":31,"endColumn":38},{"ruleId":"265","severity":1,"message":"287","line":2,"column":10,"nodeType":"267","messageId":"268","endLine":2,"endColumn":18},{"ruleId":"265","severity":1,"message":"288","line":3,"column":10,"nodeType":"267","messageId":"268","endLine":3,"endColumn":14},{"ruleId":"265","severity":1,"message":"289","line":5,"column":23,"nodeType":"267","messageId":"268","endLine":5,"endColumn":29},{"ruleId":"261","severity":1,"message":"290","line":85,"column":5,"nodeType":"263","endLine":85,"endColumn":20,"suggestions":"291"},{"ruleId":"261","severity":1,"message":"292","line":265,"column":6,"nodeType":"263","endLine":265,"endColumn":8,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":271,"column":15,"nodeType":"296","messageId":"297","endLine":271,"endColumn":17},{"ruleId":"270","severity":1,"message":"271","line":419,"column":17,"nodeType":"272","endLine":419,"endColumn":42},{"ruleId":"265","severity":1,"message":"298","line":7,"column":18,"nodeType":"267","messageId":"268","endLine":7,"endColumn":25},{"ruleId":"265","severity":1,"message":"299","line":2,"column":17,"nodeType":"267","messageId":"268","endLine":2,"endColumn":25},{"ruleId":"265","severity":1,"message":"300","line":4,"column":10,"nodeType":"267","messageId":"268","endLine":4,"endColumn":18},{"ruleId":"265","severity":1,"message":"301","line":4,"column":22,"nodeType":"267","messageId":"268","endLine":4,"endColumn":38},{"ruleId":"265","severity":1,"message":"302","line":7,"column":10,"nodeType":"267","messageId":"268","endLine":7,"endColumn":20},{"ruleId":"265","severity":1,"message":"303","line":4,"column":3,"nodeType":"267","messageId":"268","endLine":4,"endColumn":21},{"ruleId":"265","severity":1,"message":"304","line":8,"column":5,"nodeType":"267","messageId":"268","endLine":8,"endColumn":18},{"ruleId":"305","severity":1,"message":"306","line":90,"column":15,"nodeType":"307","messageId":"308","endLine":90,"endColumn":16,"suggestions":"309"},{"ruleId":"305","severity":1,"message":"306","line":155,"column":31,"nodeType":"307","messageId":"308","endLine":155,"endColumn":32,"suggestions":"310"},{"ruleId":"311","severity":1,"message":"312","line":264,"column":19,"nodeType":"272","endLine":264,"endColumn":45},{"ruleId":"294","severity":1,"message":"295","line":289,"column":28,"nodeType":"296","messageId":"297","endLine":289,"endColumn":30},{"ruleId":"270","severity":1,"message":"271","line":226,"column":23,"nodeType":"272","endLine":238,"endColumn":25},{"ruleId":"313","severity":1,"message":"314","line":5,"column":10,"nodeType":"267","messageId":"268","endLine":5,"endColumn":29},{"ruleId":"313","severity":1,"message":"315","line":6,"column":8,"nodeType":"267","messageId":"268","endLine":6,"endColumn":19},{"ruleId":"294","severity":1,"message":"295","line":191,"column":16,"nodeType":"296","messageId":"297","endLine":191,"endColumn":18},{"ruleId":"270","severity":1,"message":"271","line":228,"column":25,"nodeType":"272","endLine":237,"endColumn":27},{"ruleId":"265","severity":1,"message":"316","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":26},{"ruleId":"265","severity":1,"message":"317","line":22,"column":11,"nodeType":"267","messageId":"268","endLine":22,"endColumn":19},{"ruleId":"265","severity":1,"message":"318","line":169,"column":9,"nodeType":"267","messageId":"268","endLine":169,"endColumn":28},{"ruleId":"270","severity":1,"message":"271","line":224,"column":25,"nodeType":"272","endLine":228,"endColumn":27},{"ruleId":"261","severity":1,"message":"319","line":23,"column":3,"nodeType":"267","endLine":23,"endColumn":12,"suggestions":"320"},"no-native-reassign",["321"],"no-negated-in-lhs",["322"],["321"],["322"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentIndex'. Either include it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["323"],"@typescript-eslint/no-unused-vars","'Popover' is defined but never used.","Identifier","unusedVar","'img1' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ArticleMenu' is defined but never used.","'Link' is defined but never used.","'AddViewI' is defined but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'props.location.pathname'. Either include them or remove the dependency array.",["324"],"React Hook useEffect has missing dependencies: 'data?.id' and 'data?.remark'. Either include them or remove the dependency array.",["325"],["321"],["322"],"'source' is assigned a value but never used.","'Checkbox' is defined but never used.","'addBlogArticle' is defined but never used.","'token' is assigned a value but never used.","'removeToken' is assigned a value but never used.","'ArticleI' is defined but never used.","'post' is defined but never used.","'Switch' is defined but never used.","React Hook useCallback has missing dependencies: 'deserializer', 'options', and 'state'. Either include them or remove the dependency array.",["326"],"React Hook useEffect has missing dependencies: 'props.history' and 'props.match.params.id'. Either include them or remove the dependency array.",["327"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'message' is defined but never used.","'useState' is defined but never used.","'getImage' is defined but never used.","'UploadFileStatus' is defined but never used.","'ImagesType' is defined but never used.","'getBlogArticleList' is defined but never used.","'CloseOutlined' is defined but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["328","329"],["330","331"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'useImperativeDialog' is defined but never used.","'ImageViewer' is defined but never used.","'useEffect' is defined but never used.","'category' is assigned a value but never used.","'checkWillLoadNewBox' is assigned a value but never used.","React Hook useEffect contains a call to 'setCurrentIndex'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["332"],"no-global-assign","no-unsafe-negation",{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"messageId":"343","fix":"344","desc":"345"},{"messageId":"346","fix":"347","desc":"348"},{"messageId":"343","fix":"349","desc":"345"},{"messageId":"346","fix":"350","desc":"348"},{"desc":"351","fix":"352"},"Update the dependencies array to be: [currentIndex]",{"range":"353","text":"354"},"Update the dependencies array to be: [props.history, props.location.pathname]",{"range":"355","text":"356"},"Update the dependencies array to be: [data?.id, data?.remark, isAsisted]",{"range":"357","text":"358"},"Update the dependencies array to be: [deserializer, key, options, state]",{"range":"359","text":"360"},"Update the dependencies array to be: [props.history, props.match.params.id]",{"range":"361","text":"362"},"removeEscape",{"range":"363","text":"364"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"365","text":"366"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"367","text":"364"},{"range":"368","text":"366"},"Add dependencies array: []",{"range":"369","text":"370"},[2225,2251],"[currentIndex]",[4454,4456],"[props.history, props.location.pathname]",[4998,5009],"[data?.id, data?.remark, isAsisted]",[2546,2561],"[deserializer, key, options, state]",[8721,8723],"[props.history, props.match.params.id]",[2406,2407],"",[2406,2406],"\\",[4292,4293],[4292,4292],[857,857],", []"]