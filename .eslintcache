[{"D:\\git_workspace\\junior-blog\\src\\index.tsx":"1","D:\\git_workspace\\junior-blog\\src\\reportWebVitals.ts":"2","D:\\git_workspace\\junior-blog\\src\\App.tsx":"3","D:\\git_workspace\\junior-blog\\src\\components\\Hello\\index.tsx":"4","D:\\git_workspace\\junior-blog\\src\\components\\AnotherHello\\index.tsx":"5","D:\\git_workspace\\junior-blog\\src\\components\\Header\\index.tsx":"6","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\index.tsx":"7","D:\\git_workspace\\junior-blog\\src\\components\\Loader\\index.tsx":"8","D:\\git_workspace\\junior-blog\\src\\components\\Container\\index.tsx":"9","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-article-introduction.tsx":"10","D:\\git_workspace\\junior-blog\\src\\components\\LeeCard\\index.tsx":"11","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-detail.tsx":"12","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\mockData.tsx":"13","D:\\git_workspace\\junior-blog\\src\\components\\CodeBlock\\index.tsx":"14","D:\\git_workspace\\junior-blog\\src\\components\\ArticleMenu\\index.tsx":"15","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Login\\index.tsx":"16","D:\\git_workspace\\junior-blog\\src\\api\\service.ts":"17","D:\\git_workspace\\junior-blog\\src\\api\\index.ts":"18","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\index.tsx":"19","D:\\git_workspace\\junior-blog\\src\\utils\\useLocalStorage.ts":"20","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\AddArticle\\index.tsx":"21","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\IndexPage\\index.tsx":"22","D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\index.tsx":"23"},{"size":449,"mtime":1608014455962,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":1122,"mtime":1608102252186,"results":"27","hashOfConfig":"25"},{"size":1028,"mtime":1607674880842,"results":"28","hashOfConfig":"25"},{"size":324,"mtime":1607675095000,"results":"29","hashOfConfig":"25"},{"size":4502,"mtime":1607946047307,"results":"30","hashOfConfig":"25"},{"size":1791,"mtime":1608016375924,"results":"31","hashOfConfig":"25"},{"size":561,"mtime":1608084953157,"results":"32","hashOfConfig":"25"},{"size":1201,"mtime":1608120775535,"results":"33","hashOfConfig":"25"},{"size":3770,"mtime":1607992398752,"results":"34","hashOfConfig":"25"},{"size":2455,"mtime":1607991414713,"results":"35","hashOfConfig":"25"},{"size":4141,"mtime":1608016414437,"results":"36","hashOfConfig":"25"},{"size":900,"mtime":1608016552596,"results":"37","hashOfConfig":"25"},{"size":271,"mtime":1607996760877,"results":"38","hashOfConfig":"25"},{"size":649,"mtime":1608014298480,"results":"39","hashOfConfig":"25"},{"size":3334,"mtime":1608092605184,"results":"40","hashOfConfig":"25"},{"size":902,"mtime":1608118992820,"results":"41","hashOfConfig":"25"},{"size":1261,"mtime":1608094920041,"results":"42","hashOfConfig":"25"},{"size":3840,"mtime":1608114315848,"results":"43","hashOfConfig":"25"},{"size":2925,"mtime":1608086129643,"results":"44","hashOfConfig":"25"},{"size":8529,"mtime":1608114911732,"results":"45","hashOfConfig":"25"},{"size":822,"mtime":1608100736826,"results":"46","hashOfConfig":"25"},{"size":2908,"mtime":1608123572076,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1pbi381",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\git_workspace\\junior-blog\\src\\index.tsx",[],["106","107"],"D:\\git_workspace\\junior-blog\\src\\reportWebVitals.ts",[],"D:\\git_workspace\\junior-blog\\src\\App.tsx",["108"],"import React from \"react\";\n// import Header from \"./components/Header\";\nimport \"./App.css\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Blog from \"./pages/Blog\";\nimport BlogDetail from \"./pages/Blog/blog-detail\";\nimport Login from \"./pages/Admin/Login\";\nimport Main from \"./pages/Admin/Main\";\nimport { BackTop } from \"antd\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport AddArticle from \"./pages/Admin/Main/AddArticle\";\n\nfunction App() {\n  return (\n    <HelmetProvider>\n      <Router>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n        </Helmet>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" exact component={Blog}></Route>\n            <Route path=\"/blogdetail/:id\" exact component={BlogDetail}></Route>\n            <Route path=\"/login\" exact component={Login}></Route>\n            <Route path=\"/admin\" component={Main}></Route>\n          </Switch>\n        </div>\n        <BackTop />\n      </Router>\n      {/* <h1 className=\"animated bounce\">An animated element</h1> */}\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","D:\\git_workspace\\junior-blog\\src\\components\\Hello\\index.tsx",[],["109","110"],"D:\\git_workspace\\junior-blog\\src\\components\\AnotherHello\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Header\\index.tsx",["111"],"import React, { useEffect, useState } from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport logo from \"../../image/Overwatch-big.png\";\r\nimport { UpSquareOutlined, DownSquareOutlined } from \"@ant-design/icons\";\r\nimport style from \"./index.module.less\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\n/**\r\n * 导航栏\r\n * props：暂无，由于内容较为固定，暂时 hard-code\r\n */\r\nfunction Header() {\r\n  // 控制当前header元素所在的高亮\r\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\r\n  // 控制header元素的显隐，用于移动端\r\n  const [headerVisible, setHeaderVisible] = useState<boolean>(false);\r\n\r\n  const HeaderPop = (\r\n    <div className={style[\"pop-content\"]}>\r\n      <span>欢迎来到我(守)的(望)空(先)间(锋)，冲鸭！！！</span>\r\n    </div>\r\n  );\r\n\r\n  const HeaderItem = () => {\r\n    //手机端的Header-item\r\n    return (\r\n      <div className={style[\"h-item\"]}>\r\n        <li\r\n          className={\r\n            currentIndex === 0\r\n              ? `${style[\"item-ph\"]} ${style[\"current-ph\"]}`\r\n              : style[\"item-ph\"]\r\n          }\r\n        >\r\n          <Link to=\"/\">技术博客</Link>\r\n        </li>\r\n        <li\r\n          className={\r\n            currentIndex === 1\r\n              ? `${style[\"item-ph\"]} ${style[\"current-ph\"]}`\r\n              : style[\"item-ph\"]\r\n          }\r\n        >\r\n          <Link to=\"/interact\">留言板</Link>\r\n        </li>\r\n        <li\r\n          className={\r\n            currentIndex === 2\r\n              ? `${style[\"item-ph\"]} ${style[\"current-ph\"]}`\r\n              : style[\"item-ph\"]\r\n          }\r\n        >\r\n          <Link to=\"/life\">历程</Link>\r\n        </li>\r\n        <li\r\n          className={\r\n            currentIndex === 3\r\n              ? `${style[\"item-ph\"]} ${style[\"current-ph\"]}`\r\n              : style[\"item-ph\"]\r\n          }\r\n        >\r\n          <Link to=\"/friendLink\">友链</Link>\r\n        </li>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const path = window.location.pathname.split(\"/\"); // 解析path\r\n    let index = currentIndex;\r\n    switch (path[1]) {\r\n      case \"\":\r\n        index = 0;\r\n        break;\r\n      case \"image\":\r\n        index = 1;\r\n        break;\r\n      case \"interact\":\r\n        index = 2;\r\n        break;\r\n      case \"about\":\r\n        index = 3;\r\n        break;\r\n    }\r\n    setCurrentIndex(index);\r\n  }, [window.location.pathname]);\r\n  return (\r\n    <div className={style.header}>\r\n      <div className={style.nav}>\r\n        <Popover placement=\"bottom\" content={HeaderPop} trigger=\"hover\">\r\n          <span className={`${style[\"header-title\"]} animated`}>\r\n            <img src={logo} alt=\"Junior_Lee\" />\r\n            <span className={style.text}>Junior_Lee个人博客</span>\r\n          </span>\r\n        </Popover>\r\n\r\n        <ul className={style[\"header-menu\"]}>\r\n          <li\r\n            className={\r\n              currentIndex === 0\r\n                ? `${style.item} animated ${style.current}`\r\n                : `${style.item} animated`\r\n            }\r\n          >\r\n            <Link to=\"/\">技术博客</Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              currentIndex === 1\r\n                ? `${style.item} animated ${style.current}`\r\n                : `${style.item} animated`\r\n            }\r\n          >\r\n            <Link to=\"/interact\">留言板</Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              currentIndex === 2\r\n                ? `${style.item} animated ${style.current}`\r\n                : `${style.item} animated`\r\n            }\r\n          >\r\n            <Link to=\"/life\">历程</Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              currentIndex === 3\r\n                ? `${style.item} animated ${style.current}`\r\n                : `${style.item} animated`\r\n            }\r\n          >\r\n            <Link to=\"/friendLink\">友链</Link>\r\n          </li>\r\n        </ul>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          content={HeaderItem}\r\n          trigger=\"hover\"\r\n          visible={headerVisible}\r\n          onVisibleChange={(visible: boolean) => setHeaderVisible(visible)}\r\n        >\r\n          <span\r\n            className={style[\"header-menu-ph\"]}\r\n            onClick={() => setHeaderVisible(!headerVisible)}\r\n          >\r\n            {headerVisible ? <UpSquareOutlined /> : <DownSquareOutlined />}\r\n          </span>\r\n        </Popover>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\index.tsx",["112"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport LeeCard from \"../../components/LeeCard\";\r\n\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nimport BlogArticleIntroduction, {\r\n  BlogArticleI,\r\n} from \"./blog-article-introduction\";\r\n\r\nfunction Blog() {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [blogList, setBlogList] = useState<BlogArticleI[]>([]);\r\n\r\n  useEffect(() => {\r\n    // setLoading(true);\r\n\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      setBlogList([\r\n        { id: 1, type: 1, title: \"Test1\", introduction: \"简介1。。。\" },\r\n        { id: 1, type: 1, title: \"Test2\", introduction: \"简介2。。。\" },\r\n        { id: 1, type: 2, title: \"Test3\", introduction: \"简介3。。。\" },\r\n        { id: 1, type: 1, title: \"Test4\", introduction: \"简介4。。。\" },\r\n        { id: 1, type: 1, title: \"Test5\", introduction: \"简介5。。。\" },\r\n        { id: 1, type: 2, title: \"Test6\", introduction: \"简介6。。。\" },\r\n        { id: 1, type: 1, title: \"Test7\", introduction: \"简介7。。。\" },\r\n        { id: 1, type: 1, title: \"Test8\", introduction: \"简介8。。。\" },\r\n        { id: 1, type: 2, title: \"Test9\", introduction: \"简介9。。。\" },\r\n      ]);\r\n    }, 1000);\r\n  }, []);\r\n  return (\r\n    <Loader loading={loading}>\r\n      <Header />\r\n      <Container>\r\n        <>\r\n          {blogList.map((blog, index) => (\r\n            <BlogArticleIntroduction key={index} data={blog} />\r\n          ))}\r\n        </>\r\n        <>\r\n          <LeeCard />\r\n        </>\r\n      </Container>\r\n    </Loader>\r\n  );\r\n}\r\n\r\nexport default withRouter(Blog);\r\n","D:\\git_workspace\\junior-blog\\src\\components\\Loader\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\Container\\index.tsx",["113"],"import React from \"react\";\r\nimport { Row, Col, Popover } from \"antd\";\r\nimport EveryDaySentence from \"../EveryDaySentence\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport style from \"./index.module.less\";\r\n\r\nconst Container: React.FC = (props) => {\r\n  const content = React.Children.map(props.children, (child) => child);\r\n  // const [main, ...aside] = content;\r\n\r\n  return (\r\n    <div className={style.center}>\r\n      <Helmet>\r\n        <title>博客 | Junior_Lee的个人博客</title>\r\n      </Helmet>\r\n\r\n      {/* <div className={style[\"everyday-sentence\"]}>\r\n        <Popover placement=\"bottom\" content={EveryDaySentence} trigger=\"hover\">\r\n          <span>\r\n            台阶是一层一层筑起的，目前的现实是未来理想的基础。 —— 徐特立\r\n          </span>\r\n        </Popover>\r\n      </div> */}\r\n      <EveryDaySentence />\r\n\r\n      <Row justify=\"space-between\">\r\n        <Col xs={24} sm={24} md={24} lg={17} xl={17} id=\"main-left\">\r\n          {content && content[0]}\r\n        </Col>\r\n        <Col xs={0} sm={0} md={0} lg={7} xl={7} id=\"main-right\">\r\n          {content && content[1]}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-article-introduction.tsx",["114","115"],"import React from \"react\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport {\r\n  FireFilled,\r\n  BorderlessTableOutlined,\r\n  LikeFilled,\r\n} from \"@ant-design/icons\";\r\nimport style from \"./introduction.module.less\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport img1 from \"../../image/intro1.jpg\";\r\n\r\nexport interface BlogArticleI {\r\n  id: number;\r\n  type: number;\r\n  title: string;\r\n  introduction: string;\r\n}\r\n\r\ninterface BlogArticleProps {\r\n  data: BlogArticleI;\r\n}\r\n\r\nexport default function BlogArticleIntroduction(props: BlogArticleProps) {\r\n  const { data } = props;\r\n  return (\r\n    <LazyLoad height={400}>\r\n      <div className={`${style[\"blog-item\"]} animated rollIn`}>\r\n        <div className={style[\"blog-header\"]}>\r\n          <div className={style[\"blog-title-wrap\"]}>\r\n            <div className={style[\"blog-title\"]}>\r\n              <strong>{data.type == 1 ? \"【转载】\" : \"【原创】\"}</strong>\r\n              <Link to={`/blogdetail/article${data.id}`}>{data.title}</Link>\r\n              <div className={style[\"blog-icon-list\"]}>\r\n                <span className={style[\"blog-icon\"]}>\r\n                  <Link to={`/blog/tag/TODO`}>\r\n                    <BorderlessTableOutlined /> 技术分享\r\n                  </Link>\r\n                </span>\r\n                <span className={style[\"blog-icon\"]}>\r\n                  <Link to={`/blogassign/article/TODO`}>\r\n                    <FireFilled /> {666}\r\n                  </Link>\r\n                </span>\r\n                <span className={style[\"blog-icon\"]}>\r\n                  <Link to={`/blogassign/article/TODO`}>\r\n                    <LikeFilled /> {18}\r\n                  </Link>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className={style[\"blog-time\"]}>\r\n              <div className={style[\"blog-day\"]}>\r\n                <span className={style[\"blog-highlight\"]}>{11}</span>日\r\n              </div>\r\n              <div className={style[\"blog-else\"]}>\r\n                <span className={style[\"blog-highlight\"]}>{2020}</span> 年-\r\n                <span className={style[\"blog-highlight\"]}>{12}</span> 月\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={style[\"blog-context\"]}>\r\n          <Row>\r\n            <Col\r\n              xs={24}\r\n              sm={24}\r\n              md={14}\r\n              lg={14}\r\n              xl={14}\r\n              className={style[\"text\"]}\r\n            >\r\n              <Link\r\n                to={`/blogassign/article/TODO`}\r\n                style={{ color: \"inherit\" }}\r\n              >\r\n                <div className={style[\"text-title\"]}>文章简介：</div>\r\n                <div className={style[\"text-context\"]}>{data.introduction}</div>\r\n                <div className={style[\"text-look\"]}>\r\n                  <Button\r\n                    type=\"link\"\r\n                    onClick={() =>\r\n                      window.history.pushState(\r\n                        null,\r\n                        \"\",\r\n                        `/blogassign/article/TODO`\r\n                      )\r\n                    }\r\n                  >\r\n                    阅读全文\r\n                  </Button>\r\n                </div>\r\n              </Link>\r\n            </Col>\r\n            <Col\r\n              xs={24}\r\n              sm={24}\r\n              md={10}\r\n              lg={10}\r\n              xl={10}\r\n              className={style[\"img\"]}\r\n            >\r\n              <Link to={`/blogassign/article/TODO`}>\r\n                <img src={img1} />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className={style[\"blog-footer\"]}>www.juniorlee.city</div>\r\n      </div>\r\n    </LazyLoad>\r\n  );\r\n}\r\n","D:\\git_workspace\\junior-blog\\src\\components\\LeeCard\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\blog-detail.tsx",["116","117","118"],"import React, { useEffect, useState } from \"react\";\r\nimport Container from \"../../components/Container\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Header from \"../../components/Header\";\r\nimport LeeCard from \"../../components/LeeCard\";\r\nimport ArticleMenu from \"../../components/ArticleMenu\";\r\nimport CodeBlock from \"../../components/CodeBlock\";\r\nimport { PageHeader, Divider, message, Affix } from \"antd\";\r\nimport {\r\n  FieldTimeOutlined,\r\n  FireFilled,\r\n  LikeFilled,\r\n  BorderlessTableOutlined,\r\n} from \"@ant-design/icons\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport style from \"./blog.detail.module.less\";\r\nimport \"../../publicCSS/style.css\";\r\nimport heart from \"../../image/heart.png\";\r\nimport { blogData1 } from \"./mockData\";\r\n\r\nmessage.config({\r\n  top: 100,\r\n  duration: 2,\r\n  maxCount: 3,\r\n});\r\n\r\ninterface BlogaricleI {\r\n  id: number;\r\n  type: number;\r\n  title: string;\r\n  introduction: string;\r\n  tagName: string;\r\n  time: number;\r\n  fire: number;\r\n  remark: number;\r\n  markdown: string;\r\n}\r\n\r\nfunction BlogDetail() {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [data, setData] = useState<BlogaricleI | null>(null);\r\n  const [isAsisted, setIsAsisted] = useState<boolean>(false);\r\n\r\n  const handleAsist = (ev: React.MouseEvent) => {\r\n    if (isAsisted) {\r\n      message.info(\"你已经在本次浏览中点过赞了，感谢。\");\r\n    } else {\r\n      const remark = (data?.remark as number) + 1;\r\n      message.success(\"点赞成功，感谢你的赞！\");\r\n      setData({ ...(data as BlogaricleI), remark });\r\n      setIsAsisted(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      setData(blogData1);\r\n    }, 1000);\r\n  }, []);\r\n  return (\r\n    <Loader loading={loading}>\r\n      <Header />\r\n      <Container>\r\n        {/* {中间主栏目} */}\r\n        <div className={`${style[\"md-wrap\"]} animated rollIn`}>\r\n          <PageHeader\r\n            title=\"返回首页\"\r\n            className={style[\"md-back\"]}\r\n            onBack={() => window.history.pushState(null, \"\", \"/\")}\r\n          />\r\n          <div className={style[\"md-header\"]}>\r\n            <div className={style[\"md-title\"]}>\r\n              <strong>{data?.type == 1 ? \"【转载】\" : \"【原创】\"}</strong>\r\n              {data?.title}\r\n            </div>\r\n            <div className={style[\"md-icon-list\"]}>\r\n              <span className={style[\"md-icon\"]}>\r\n                <FieldTimeOutlined />\r\n                {moment(data?.time && new Date(data.time)).format(\r\n                  \"YYYY年MM月DD日 HH:mm\"\r\n                )}\r\n              </span>\r\n              <span className={style[\"md-icon\"]}>\r\n                <BorderlessTableOutlined /> {data?.tagName}\r\n              </span>\r\n              <span className={style[\"md-icon\"]}>\r\n                <FireFilled /> {data?.fire}\r\n              </span>\r\n              <span className={style[\"md-icon\"]}>\r\n                <LikeFilled /> {data?.remark}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className={`${style[\"md-context\"]} markdown`}>\r\n            <ReactMarkdown\r\n              source={data?.markdown as string}\r\n              escapeHtml={false}\r\n              renderers={{\r\n                code: CodeBlock,\r\n              }}\r\n            />\r\n            <Divider dashed className={style[\"ending\"]}>\r\n              Ending\r\n            </Divider>\r\n            {/* <div className={style[\"ending\"]}>-- Endding --</div> */}\r\n            <div\r\n              className={`${style[\"assist\"]} ${\r\n                isAsisted ? style[\"heart\"] : \"\"\r\n              }`}\r\n            >\r\n              <img src={heart} alt=\"\" />\r\n              <img src={heart} alt=\"\" />\r\n              <div onClick={handleAsist}>赞</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* {右侧栏} */}\r\n        <>\r\n          <LeeCard />\r\n          <ArticleMenu source={(\"\\n\" + data?.markdown) as string} />\r\n        </>\r\n      </Container>\r\n    </Loader>\r\n  );\r\n}\r\n\r\nexport default withRouter(BlogDetail);\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\Blog\\mockData.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\CodeBlock\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\ArticleMenu\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Login\\index.tsx",["119","120","121","122"],"import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Form, Input, Button, Checkbox, message } from \"antd\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport style from \"./index.module.less\";\r\nimport {\r\n  login,\r\n  checkLogin,\r\n  ILogin,\r\n  addBlogArticle,\r\n} from \"../../../api/service\";\r\nimport { useLocalStorage } from \"../../../utils/useLocalStorage\";\r\n// import { withRouter } from \"react-router-dom\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 4, span: 20 },\r\n};\r\n\r\ninterface LoginData extends ILogin {\r\n  remember: boolean;\r\n}\r\n\r\nfunction Login() {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [token, setToken, removeToken] = useLocalStorage(\"token\", null, {\r\n    raw: true,\r\n  });\r\n\r\n  const onFinish = (values: LoginData) => {\r\n    console.log(\"Success:\", values);\r\n    login({ username: values.username, password: values.password })\r\n      .then((res) => {\r\n        console.log(\"res in login\", res);\r\n        if (res.code === 200) {\r\n          message.success(\"登录成功\");\r\n          //是否记住token\r\n          setToken(res.token);\r\n\r\n          window.location.replace(\"/admin\");\r\n        } else {\r\n          message.error(res.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  // 验证是否已经登录，若已经登录则直接跳转至后台界面\r\n  useEffect(() => {\r\n    checkLogin().then((res) => {\r\n      if (res.code === 200) {\r\n        console.log(\"在登录界面。检测到已经登录\");\r\n        window.location.replace(\"/admin\");\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Loader loading={loading}>\r\n      <div className={style[\"form-container\"]}>\r\n        <Helmet>\r\n          <title>登录 | Junior_Lee的个人博客管理</title>\r\n        </Helmet>\r\n        <div className={style[\"title\"]}>Junior Lee博客后台管理登录</div>\r\n        <Form\r\n          {...layout}\r\n          form={form}\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"用户名\"\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please input your username!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"密码\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your password!\" }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              className={style[\"reset\"]}\r\n              htmlType=\"button\"\r\n              onClick={onReset}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Loader>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\git_workspace\\junior-blog\\src\\api\\service.ts",[],"D:\\git_workspace\\junior-blog\\src\\api\\index.ts",[],"D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\index.tsx",["123"],"import React, { useEffect, useState } from \"react\";\r\nimport style from \"./index.module.less\";\r\nimport { checkLogin } from \"../../../api/service\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport { Link, Route, Switch, withRouter } from \"react-router-dom\";\r\n\r\nimport { Layout, Menu, Breadcrumb, Button } from \"antd\";\r\nimport {\r\n  DesktopOutlined,\r\n  PieChartOutlined,\r\n  ToolOutlined,\r\n  FileImageOutlined,\r\n  BookOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport Index from \"./IndexPage\";\r\nimport AddArticle from \"./AddArticle\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst Main: React.FC = (props) => {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [collapsed, setCollapsed] = useState<boolean>(false);\r\n\r\n  const onCollapse = (collapsed: any) => {\r\n    console.log(collapsed);\r\n    setCollapsed(collapsed);\r\n    // this.setState({ collapsed });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"use Effect in Main\");\r\n    checkLogin().then((res) => {\r\n      res.code === 200 && setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Loader loading={loading}>\r\n      <Helmet>\r\n        <title>管理页 | Junior_Lee的个人博客</title>\r\n      </Helmet>\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Sider\r\n          className={style[\"side\"]}\r\n          collapsible\r\n          collapsed={collapsed}\r\n          onCollapse={onCollapse}\r\n        >\r\n          <div className=\"logo\" />\r\n          <Menu\r\n            className={style[\"side-menu\"]}\r\n            theme=\"dark\"\r\n            defaultSelectedKeys={[\"1\"]}\r\n            mode=\"inline\"\r\n          >\r\n            <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n              <Link to=\"/admin/\">工作台</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\r\n              Option 2\r\n            </Menu.Item>\r\n            <SubMenu key=\"sub1\" icon={<BookOutlined />} title=\"文章\">\r\n              <Menu.Item key=\"3\">文章列表</Menu.Item>\r\n              <Menu.Item key=\"4\">\r\n                <Link to=\"/admin/addArticle\">添加文章</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"5\">草稿列表</Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu key=\"sub2\" icon={<FileImageOutlined />} title=\"图片\">\r\n              <Menu.Item key=\"6\">Team 1</Menu.Item>\r\n              <Menu.Item key=\"8\">Team 2</Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item key=\"9\" icon={<ToolOutlined />}>\r\n              待定功能\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Header className={style[\"header\"]} style={{ padding: 0 }}>\r\n            <Breadcrumb style={{ margin: \"16px\" }}>\r\n              <Breadcrumb.Item>User</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <span>Junior_Lee博客后台管理</span>\r\n            <Button className={style[\"exit\"]} type=\"link\">\r\n              退出登录\r\n            </Button>\r\n          </Header>\r\n          <Content style={{ margin: \"0 16px\" }}>\r\n            <div\r\n              style={{\r\n                padding: \"16px 24px\",\r\n                minHeight: \"360px\",\r\n                minWidth: \"1000px\",\r\n              }}\r\n            >\r\n              <Route path=\"/admin\" exact component={Index}></Route>\r\n              <Route\r\n                path=\"/admin/addArticle\"\r\n                exact\r\n                component={AddArticle}\r\n              ></Route>\r\n            </div>\r\n          </Content>\r\n          <Footer className={style[\"footer\"]}>\r\n            Ant Design ©2018 Created by Ant UED\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Loader>\r\n  );\r\n};\r\n\r\nexport default withRouter(Main);\r\n","D:\\git_workspace\\junior-blog\\src\\utils\\useLocalStorage.ts",["124"],"import { useState, useCallback, Dispatch, SetStateAction } from \"react\";\r\n\r\nconst isClient = typeof window === \"object\";\r\n\r\ntype parserOptions<T> =\r\n  | {\r\n      raw: true;\r\n    }\r\n  | {\r\n      raw: false;\r\n      serializer: (value: T) => string;\r\n      deserializer: (value: string) => T;\r\n    };\r\n\r\nconst noop = () => {};\r\n\r\nexport const useLocalStorage = <T>(\r\n  key: string,\r\n  initialValue?: T,\r\n  options?: parserOptions<T>\r\n): [T | undefined, Dispatch<SetStateAction<T | undefined>>, () => void] => {\r\n  if (!isClient) {\r\n    return [initialValue as T, noop, noop];\r\n  }\r\n  if (!key) {\r\n    throw new Error(\"useLocalStorage key may not be falsy\");\r\n  }\r\n\r\n  const deserializer = options\r\n    ? options.raw\r\n      ? (value: any) => value\r\n      : options.deserializer\r\n    : JSON.parse;\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [state, setState] = useState<T | undefined>(() => {\r\n    try {\r\n      const serializer = options\r\n        ? options.raw\r\n          ? String\r\n          : options.serializer\r\n        : JSON.stringify;\r\n\r\n      const localStorageValue = localStorage.getItem(key);\r\n      if (localStorageValue !== null) {\r\n        return deserializer(localStorageValue);\r\n      } else {\r\n        initialValue && localStorage.setItem(key, serializer(initialValue));\r\n        return initialValue;\r\n      }\r\n    } catch {\r\n      // If user is in private mode or has storage restriction\r\n      // localStorage can throw. JSON.parse and JSON.stringify\r\n      // can throw, too.\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const set: Dispatch<SetStateAction<T | undefined>> = useCallback(\r\n    (valOrFunc) => {\r\n      try {\r\n        const newState =\r\n          typeof valOrFunc === \"function\"\r\n            ? (valOrFunc as Function)(state)\r\n            : valOrFunc;\r\n        if (typeof newState === \"undefined\") return;\r\n        let value: string;\r\n\r\n        if (options)\r\n          if (options.raw)\r\n            if (typeof newState === \"string\") value = newState;\r\n            else value = JSON.stringify(newState);\r\n          else if (options.serializer) value = options.serializer(newState);\r\n          else value = JSON.stringify(newState);\r\n        else value = JSON.stringify(newState);\r\n\r\n        localStorage.setItem(key, value);\r\n        setState(deserializer(value));\r\n      } catch {\r\n        // If user is in private mode or has storage restriction\r\n        // localStorage can throw. Also JSON.stringify can throw.\r\n      }\r\n    },\r\n    [key, setState]\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const remove = useCallback(() => {\r\n    try {\r\n      localStorage.removeItem(key);\r\n      setState(undefined);\r\n    } catch {\r\n      // If user is in private mode or has storage restriction\r\n      // localStorage can throw.\r\n    }\r\n  }, [key, setState]);\r\n\r\n  return [state, set, remove];\r\n};\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\AddArticle\\index.tsx",["125","126"],"import React, { useEffect, useState } from \"react\";\r\nimport moment, { Moment } from \"moment\";\r\nimport marked from \"marked\";\r\nimport hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/monokai-sublime.css\";\r\nimport style from \"./index.module.less\";\r\nimport \"../../../../publicCSS/style.css\";\r\nimport { Row, Col, Input, Select, Button, DatePicker, message } from \"antd\";\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst renderer = new marked.Renderer();\r\nmarked.setOptions({\r\n  renderer: renderer,\r\n  gfm: true, //启动类似Github样式的Markdown,填写true或者false\r\n  pedantic: false, //只解析符合Markdown定义的，不修正Markdown的错误。填写true或者false\r\n  sanitize: false, //原始输出，忽略HTML标签，这个作为一个开发人员，一定要写flase\r\n  //tables: true, //支持Github形式的表格，必须打开gfm选项\r\n  breaks: true, //支持Github换行符，必须打开gfm选项，填写true或者false\r\n  smartLists: true, //优化列表输出，这个填写ture之后，你的样式会好看很多，所以建议设置成ture\r\n  smartypants: true,\r\n  highlight: function (code) {\r\n    return hljs.highlightAuto(code).value;\r\n  },\r\n});\r\n\r\ninterface ArticleI {\r\n  articleId: number; // 0; // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n  // oldarticleTitle: \"\"; //以前的标题(保存后在数据库依照此标题修改)\r\n  articleTitle: string; // \"\"; //文章标题\r\n  articleContent: string; // \"\"; //markdown的编辑内容\r\n  markdownContent: string; // \"预览内容\"; //html内容\r\n  introducemd: string; // \"\"; //简介的markdown内容\r\n  introducehtml: string; // \"等待编辑\"; //简介的html内容\r\n  publishDate: Moment | null; // \"\"; //发布日期\r\n  updateDate: number; // \"\"; //修改日志的日期(未使用)\r\n  // typeInfo: []; // 文章类别信息(未使用)\r\n  selectedType: number | string; //选择的文章类别\r\n  sourceType: number | string; // \"\"; //文章来源  原创 || 转载\r\n\r\n  //   disabled: false; //修改文章后按钮不可点击\r\n  //   titledisabled: false; //标题改变控制按钮不可点击\r\n}\r\n\r\nexport default function AddArticle() {\r\n  const initial: ArticleI = {\r\n    articleId: 0, // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n    articleTitle: \"\", //文章标题\r\n    articleContent: \"\", //markdown的编辑内容\r\n    markdownContent: \"预览内容\", //html内容\r\n    introducemd: \"\", //简介的markdown内容\r\n    introducehtml: \"等待编辑\", //简介的html内容\r\n    publishDate: null, //发布日期\r\n    updateDate: 0, //修改日志的日期(未使用)\r\n    // typeInfo: [], // 文章类别信息(未使用)\r\n    selectedType: -1, //选择的文章类别\r\n    sourceType: -1, //文章来源\r\n  };\r\n  const [article, setArticle] = useState<ArticleI>(initial);\r\n\r\n  const changeContent = (value: string) => {\r\n    const html = marked(value);\r\n    setArticle({ ...article, articleContent: value, markdownContent: html });\r\n  };\r\n\r\n  const changeIntroduce = (value: string) => {\r\n    const html = marked(value);\r\n    setArticle({ ...article, introducemd: value, introducehtml: html });\r\n  };\r\n\r\n  const saveArticle = () => {};\r\n\r\n  const publishArticle = () => {};\r\n\r\n  const condition = () => {\r\n    if (!article.articleTitle) {\r\n      message.warning(\"文章标题不能为空\");\r\n      return false;\r\n    } else if (!article.selectedType) {\r\n      message.warning(\"必须选择文章类型\");\r\n      return false;\r\n    } else if (!article.articleContent) {\r\n      message.warning(\"文章内容不能为空\");\r\n      return false;\r\n    } else if (!article.introducemd) {\r\n      message.warning(\"文章简介不能为空\");\r\n      return false;\r\n    } else if (!article.publishDate) {\r\n      message.warning(\"发布日期不能为空\");\r\n      return false;\r\n    } else if (!article.sourceType) {\r\n      message.warning(\"文章来源不能为空\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleSave = (e: KeyboardEvent) => {\r\n      if (\r\n        e.key == \"s\" &&\r\n        (navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey)\r\n      ) {\r\n        e.preventDefault();\r\n        alert(\"modified, saved\");\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleSave);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Row gutter={10}>\r\n        {/* 主体内容左侧部分 */}\r\n        <Col span={18}>\r\n          <Row gutter={10}>\r\n            <Col span={16}>\r\n              <Input\r\n                placeholder=\"博客标题\"\r\n                value={article.articleTitle}\r\n                onChange={(e) => {\r\n                  setArticle({ ...article, articleTitle: e.target.value });\r\n                }}\r\n                size=\"large\"\r\n              />\r\n            </Col>\r\n\r\n            <Col span={4} style={{ paddingLeft: \"21px\" }}>\r\n              <Select\r\n                className={style[\"select\"]}\r\n                value={\r\n                  article.selectedType === -1\r\n                    ? \"请选择文章类型\"\r\n                    : article.selectedType\r\n                }\r\n                size=\"large\"\r\n                onChange={(value) =>\r\n                  setArticle({ ...article, selectedType: value })\r\n                }\r\n              >\r\n                <Option value={0}>博客分享</Option>\r\n                <Option value={1}>Leetcode训练</Option>\r\n              </Select>\r\n            </Col>\r\n\r\n            <Col span={4}>\r\n              <Select\r\n                className={style[\"select\"]}\r\n                value={\r\n                  article.sourceType === -1\r\n                    ? \"请选择文章来源\"\r\n                    : article.selectedType\r\n                }\r\n                size=\"large\"\r\n                onChange={(value) =>\r\n                  setArticle({ ...article, sourceType: value })\r\n                }\r\n              >\r\n                <Option value={0}>博主原创</Option>\r\n                <Option value={1}>美文转载</Option>\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row gutter={10}>\r\n            <Col span={12}>\r\n              <TextArea\r\n                value={article.articleContent}\r\n                className={style[\"markdown-content\"]}\r\n                rows={60}\r\n                placeholder=\"文章内容\"\r\n                onChange={(e) => changeContent(e.target.value)}\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <div\r\n                className={`${style[\"show-html\"]} markdown`}\r\n                dangerouslySetInnerHTML={{ __html: article.markdownContent }}\r\n              ></div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {/* 主体内容右侧部分 */}\r\n        <Col span={6}>\r\n          <Row>\r\n            {/* <Col span={24}> */}\r\n            <Col span={8}>\r\n              <Button size=\"large\" onClick={saveArticle}>\r\n                暂存文章\r\n              </Button>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button type=\"primary\" size=\"large\" onClick={publishArticle}>\r\n                {article.articleId > 0 ? \"确认修改\" : \"发布文章\"}\r\n              </Button>\r\n            </Col>\r\n            {/* </Col> */}\r\n            <Col span={24}>\r\n              <br />\r\n              <TextArea\r\n                className={style[\"introduce-content\"]}\r\n                rows={8}\r\n                placeholder=\"文章简介\"\r\n                value={article.introducemd}\r\n                onChange={(e) => {\r\n                  changeIntroduce(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <div\r\n                className={`${style[\"introduce-html\"]} markdown`}\r\n                dangerouslySetInnerHTML={{ __html: article.introducehtml }}\r\n              ></div>\r\n            </Col>\r\n            <Col span={12}>\r\n              <div className={style[\"date-select\"]}>\r\n                <DatePicker\r\n                  value={\r\n                    article.publishDate === null\r\n                      ? null\r\n                      : moment(article.publishDate)\r\n                  }\r\n                  placeholder=\"发布日期\"\r\n                  size=\"large\"\r\n                  onChange={(date) =>\r\n                    setArticle({ ...article, publishDate: date })\r\n                  }\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","D:\\git_workspace\\junior-blog\\src\\pages\\Admin\\Main\\IndexPage\\index.tsx",[],"D:\\git_workspace\\junior-blog\\src\\components\\EveryDaySentence\\index.tsx",["127"],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":12,"column":8,"nodeType":"134","messageId":"135","endLine":12,"endColumn":18},{"ruleId":"128","replacedBy":"136"},{"ruleId":"130","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":86,"column":6,"nodeType":"140","endLine":86,"endColumn":32,"suggestions":"141"},{"ruleId":"132","severity":1,"message":"142","line":8,"column":22,"nodeType":"134","messageId":"135","endLine":8,"endColumn":26},{"ruleId":"132","severity":1,"message":"143","line":2,"column":20,"nodeType":"134","messageId":"135","endLine":2,"endColumn":27},{"ruleId":"144","severity":1,"message":"145","line":33,"column":34,"nodeType":"146","messageId":"147","endLine":33,"endColumn":36},{"ruleId":"148","severity":1,"message":"149","line":105,"column":17,"nodeType":"150","endLine":105,"endColumn":35},{"ruleId":"132","severity":1,"message":"151","line":8,"column":40,"nodeType":"134","messageId":"135","endLine":8,"endColumn":45},{"ruleId":"132","severity":1,"message":"142","line":16,"column":22,"nodeType":"134","messageId":"135","endLine":16,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":76,"column":35,"nodeType":"146","messageId":"147","endLine":76,"endColumn":37},{"ruleId":"132","severity":1,"message":"152","line":3,"column":31,"nodeType":"134","messageId":"135","endLine":3,"endColumn":39},{"ruleId":"132","severity":1,"message":"153","line":10,"column":3,"nodeType":"134","messageId":"135","endLine":10,"endColumn":17},{"ruleId":"132","severity":1,"message":"154","line":30,"column":10,"nodeType":"134","messageId":"135","endLine":30,"endColumn":15},{"ruleId":"132","severity":1,"message":"155","line":30,"column":27,"nodeType":"134","messageId":"135","endLine":30,"endColumn":38},{"ruleId":"132","severity":1,"message":"156","line":5,"column":23,"nodeType":"134","messageId":"135","endLine":5,"endColumn":29},{"ruleId":"138","severity":1,"message":"157","line":85,"column":5,"nodeType":"140","endLine":85,"endColumn":20,"suggestions":"158"},{"ruleId":"132","severity":1,"message":"159","line":75,"column":9,"nodeType":"134","messageId":"135","endLine":75,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":101,"column":15,"nodeType":"146","messageId":"147","endLine":101,"endColumn":17},{"ruleId":"132","severity":1,"message":"160","line":10,"column":10,"nodeType":"134","messageId":"135","endLine":10,"endColumn":29},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"@typescript-eslint/no-unused-vars","'AddArticle' is defined but never used.","Identifier","unusedVar",["161"],["162"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentIndex'. Either include it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["163"],"'Link' is defined but never used.","'Popover' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Affix' is defined but never used.","'Checkbox' is defined but never used.","'addBlogArticle' is defined but never used.","'token' is assigned a value but never used.","'removeToken' is assigned a value but never used.","'Switch' is defined but never used.","React Hook useCallback has missing dependencies: 'deserializer', 'options', and 'state'. Either include them or remove the dependency array.",["164"],"'condition' is assigned a value but never used.","'getEverydaySentence' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [currentIndex]",{"range":"169","text":"170"},"Update the dependencies array to be: [deserializer, key, options, state]",{"range":"171","text":"172"},[2224,2250],"[currentIndex]",[2546,2561],"[deserializer, key, options, state]"]